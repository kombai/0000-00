ClassRef.UIApplication = {"[:]":"UIResponder : NSObject","[.]":{"applicationIconBadgeNumber":{"abs":"The number currently set as the badge of the app icon in Springboard.","dec":"@property(nonatomic) NSInteger applicationIconBadgeNumber"},"applicationState":{"abs":"The runtime state of the app. (read-only)","dec":"@property(nonatomic, readonly) UIApplicationState applicationState"},"applicationSupportsShakeToEdit":{"abs":"A Boolean value that determines whether shaking the device displays the undo-redo user interface.","dec":"@property(nonatomic) BOOL applicationSupportsShakeToEdit"},"backgroundRefreshStatus":{"abs":"The ability of the app to be launched into the background so that it can perform background behaviors. (read-only)","dec":"@property (nonatomic, readonly) UIBackgroundRefreshStatus backgroundRefreshStatus"},"backgroundTimeRemaining":{"abs":"The amount of time the app has to run in the background. (read-only)","dec":"@property(nonatomic, readonly) NSTimeInterval backgroundTimeRemaining"},"delegate":{"abs":"The delegate of the app object.","dec":"@property(nonatomic, assign) id<UIApplicationDelegate> delegate"},"idleTimerDisabled":{"abs":"A Boolean value that controls whether the idle timer is disabled for the app.","dec":"@property(nonatomic, getter=isIdleTimerDisabled) BOOL idleTimerDisabled"},"keyWindow":{"abs":"The app's key window. (read-only)","dec":"@property(nonatomic, readonly) UIWindow *keyWindow"},"networkActivityIndicatorVisible":{"abs":"A Boolean value that turns an indicator of network activity on or off.","dec":"@property(nonatomic, getter=isNetworkActivityIndicatorVisible) BOOL networkActivityIndicatorVisible"},"preferredContentSizeCategory":{"abs":"The font sizing option preferred by the user. (read-only)","dec":"@property(nonatomic,readonly) NSString *preferredContentSizeCategory;"},"protectedDataAvailable":{"abs":"A Boolean value indicating whether content protection is active. (read-only)","dec":"@property(nonatomic, readonly, getter=isProtectedDataAvailable) BOOL protectedDataAvailable"},"scheduledLocalNotifications":{"abs":"All currently scheduled local notifications.","dec":"@property(nonatomic, copy) NSArray *scheduledLocalNotifications"},"statusBarFrame":{"abs":"The frame rectangle defining the area of the status bar. (read-only)","dec":"@property(nonatomic, readonly) CGRect statusBarFrame"},"statusBarHidden":{"abs":"A Boolean value that determines whether the status bar is hidden.","dec":"@property(nonatomic, getter=isStatusBarHidden) BOOL statusBarHidden"},"statusBarOrientation":{"abs":"The current orientation of the app's status bar.","dec":"@property(nonatomic) UIInterfaceOrientation statusBarOrientation"},"statusBarOrientationAnimationDuration":{"abs":"The animation duration in seconds for the status bar during a 90 degree orientation change. (read-only)","dec":"@property(nonatomic, readonly) NSTimeInterval statusBarOrientationAnimationDuration"},"statusBarStyle":{"abs":"The current style of the status bar.","dec":"@property(nonatomic) UIStatusBarStyle statusBarStyle"},"userInterfaceLayoutDirection":{"abs":"Returns the layout direction of the user interface. (read-only)","dec":"@property(nonatomic, readonly) UIUserInterfaceLayoutDirection userInterfaceLayoutDirection"},"windows":{"abs":"The app's visible and hidden windows. (read-only)","dec":"@property(nonatomic, readonly) NSArray *windows"}},"[+]":{"registerObjectForStateRestoration:restorationIdentifier:":{"abs":"Registers a custom object for use with the state restoration system.","dec":"+ (void) registerObjectForStateRestoration:(id<UIStateRestoring>)object restorationIdentifier:(NSString *)restorationIdentifier"},"sharedApplication":{"abs":"Returns the singleton app instance.","dec":"+ (UIApplication *)sharedApplication"}},"[-]":{"beginBackgroundTaskWithExpirationHandler:":{"abs":"Marks the beginning of a new long-running background task.","dec":"- (UIBackgroundTaskIdentifier)beginBackgroundTaskWithExpirationHandler:(void (^)(void))handler"},"beginBackgroundTaskWithName:expirationHandler:":{"abs":"Marks the beginning of a new long-running background task with the specified name.","dec":"- (UIBackgroundTaskIdentifier)beginBackgroundTaskWithName:(NSString *)taskName expirationHandler:(void(^)(void))handler"},"beginIgnoringInteractionEvents":{"abs":"Tells the receiver to suspend the handling of touch-related events.","dec":"- (void)beginIgnoringInteractionEvents"},"beginReceivingRemoteControlEvents":{"abs":"Tells the app to begin receiving remote-control events.","dec":"- (void)beginReceivingRemoteControlEvents"},"cancelAllLocalNotifications":{"abs":"Cancels the delivery of all scheduled local notifications.","dec":"- (void)cancelAllLocalNotifications"},"cancelLocalNotification:":{"abs":"Cancels the delivery of the specified scheduled local notification.","dec":"- (void)cancelLocalNotification:(UILocalNotification *)notification"},"canOpenURL:":{"abs":"Returns whether an app can open a given URL resource.","dec":"- (BOOL)canOpenURL:(NSURL *)url"},"clearKeepAliveTimeout":{"abs":"Removes a previously installed periodic handler block.","dec":"- (void)clearKeepAliveTimeout"},"completeStateRestoration":{"abs":"Tells the app that your code has finished any asynchronous state restoration.","dec":"- (void)completeStateRestoration"},"enabledRemoteNotificationTypes":{"abs":"Returns the types of notifications the app accepts.","dec":"- (UIRemoteNotificationType)enabledRemoteNotificationTypes"},"endBackgroundTask:":{"abs":"Marks the end of a specific long-running background task.","dec":"- (void)endBackgroundTask:(UIBackgroundTaskIdentifier)identifier"},"endIgnoringInteractionEvents":{"abs":"Tells the receiver to resume the handling of touch-related events.","dec":"- (void)endIgnoringInteractionEvents"},"endReceivingRemoteControlEvents":{"abs":"Tells the app to stop receiving remote-control events.","dec":"- (void)endReceivingRemoteControlEvents"},"extendStateRestoration":{"abs":"Tells the app that your code is restoring state asynchronously.","dec":"- (void)extendStateRestoration"},"ignoreSnapshotOnNextApplicationLaunch":{"abs":"Prevents the app from using the recent snapshot image during the next launch cycle.","dec":"- (void)ignoreSnapshotOnNextApplicationLaunch"},"isIgnoringInteractionEvents":{"abs":"Returns whether the receiver is ignoring events initiated by touches on the screen.","dec":"- (BOOL)isIgnoringInteractionEvents"},"openURL:":{"abs":"Opens the resource at the specified URL.","dec":"- (BOOL)openURL:(NSURL *)url"},"presentLocalNotificationNow:":{"abs":"Presents a local notification immediately.","dec":"- (void)presentLocalNotificationNow:(UILocalNotification *)notification"},"registerForRemoteNotificationTypes:":{"abs":"Register to receive notifications of the specified types from a provider via Apple Push Service.","dec":"- (void)registerForRemoteNotificationTypes:(UIRemoteNotificationType)types"},"scheduleLocalNotification:":{"abs":"Schedules a local notification for delivery at its encapsulated date and time.","dec":"- (void)scheduleLocalNotification:(UILocalNotification *)notification"},"sendAction:to:from:forEvent:":{"abs":"Sends an action message identified by selector to a specified target.","dec":"- (BOOL)sendAction:(SEL)action to:(id)target from:(id)sender forEvent:(UIEvent *)event"},"sendEvent:":{"abs":"Dispatches an event to the appropriate responder objects in the app.","dec":"- (void)sendEvent:(UIEvent *)event"},"setKeepAliveTimeout:handler:":{"abs":"Configures a periodic handler for VoIP apps.","dec":"- (BOOL)setKeepAliveTimeout:(NSTimeInterval)timeout handler:(void (^)(void))keepAliveHandler"},"setMinimumBackgroundFetchInterval:":{"abs":"Specifies the minimum amount of time that must elapse between background fetch operations.","dec":"- (void)setMinimumBackgroundFetchInterval:(NSTimeInterval)minimumBackgroundFetchInterval"},"setNewsstandIconImage:":{"abs":"Sets the icon of a Newsstand app to an image depicting the current issue of a publication.","dec":"- (void)setNewsstandIconImage:(UIImage *)image"},"setStatusBarHidden:withAnimation:":{"abs":"Hides or shows the status bar, optionally animating the transition.","dec":"- (void)setStatusBarHidden:(BOOL)hidden withAnimation:(UIStatusBarAnimation)animation"},"setStatusBarOrientation:animated:":{"abs":"Sets the app's status bar to the specified orientation, optionally animating the transition.","dec":"- (void)setStatusBarOrientation:(UIInterfaceOrientation)interfaceOrientation animated:(BOOL)animated"},"setStatusBarStyle:animated:":{"abs":"Sets the style of the status bar, optionally animating the transition to the new style.","dec":"- (void)setStatusBarStyle:(UIStatusBarStyle)statusBarStyle animated:(BOOL)animated"},"supportedInterfaceOrientationsForWindow:":{"abs":"Returns the default set of interface orientations to use for the view controllers in the specified window.","dec":"- (NSUInteger)supportedInterfaceOrientationsForWindow:(UIWindow *)window"},"unregisterForRemoteNotifications":{"abs":"Unregister for notifications received from Apple Push Service.","dec":"- (void)unregisterForRemoteNotifications"}},"[=]":{"UIApplicationStateActive":"","UIApplicationStateInactive":"","UIApplicationStateBackground":"","UIBackgroundTaskInvalid":"","UIMinimumKeepAliveTimeout":"","UIBackgroundFetchResultNewData":"","UIBackgroundFetchResultNoData":"","UIBackgroundFetchResultFailed":"","UIApplicationBackgroundFetchIntervalMinimum":"","UIApplicationBackgroundFetchIntervalNever":"","UIBackgroundRefreshStatusRestricted":"","UIBackgroundRefreshStatusDenied":"","UIBackgroundRefreshStatusAvailable":"","UIRemoteNotificationTypeNone":"","UIRemoteNotificationTypeBadge":"","UIRemoteNotificationTypeSound":"","UIRemoteNotificationTypeAlert":"","UIRemoteNotificationTypeNewsstandContentAvailability":"","UIInterfaceOrientationPortrait":"","UIInterfaceOrientationPortraitUpsideDown":"","UIInterfaceOrientationLandscapeLeft":"","UIInterfaceOrientationLandscapeRight":"","UIInterfaceOrientationMaskPortrait":"","UIInterfaceOrientationMaskLandscapeLeft":"","UIInterfaceOrientationMaskLandscapeRight":"","UIInterfaceOrientationMaskPortraitUpsideDown":"","UIInterfaceOrientationMaskLandscape":"","UIInterfaceOrientationMaskAll":"","UIInterfaceOrientationMaskAllButUpsideDown":"","UIUserInterfaceLayoutDirectionLeftToRight":"","UIUserInterfaceLayoutDirectionRightToLeft":"","UIStatusBarStyleDefault":"","UIStatusBarStyleLightContent":"","UIStatusBarStyleBlackTranslucent":"","UIStatusBarStyleBlackOpaque":"","UIStatusBarAnimationNone":"","UIStatusBarAnimationFade":"","UIStatusBarAnimationSlide":"","UIApplicationStatusBarOrientationUserInfoKey":"","UIApplicationStatusBarFrameUserInfoKey":"","UIContentSizeCategoryExtraSmall":"","UIContentSizeCategorySmall":"","UIContentSizeCategoryMedium":"","UIContentSizeCategoryLarge":"","UIContentSizeCategoryExtraLarge":"","UIContentSizeCategoryExtraExtraLarge":"","UIContentSizeCategoryExtraExtraExtraLarge":"","UIContentSizeCategoryAccessibilityMedium":"","UIContentSizeCategoryAccessibilityLarge":"","UIContentSizeCategoryAccessibilityExtraLarge":"","UIContentSizeCategoryAccessibilityExtraExtraLarge":"","UIContentSizeCategoryAccessibilityExtraExtraExtraLarge":"","UIContentSizeCategoryNewValueKey":"","UITrackingRunLoopMode":"","UIApplicationInvalidInterfaceOrientationException":""}};