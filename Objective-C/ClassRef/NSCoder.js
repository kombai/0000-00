ClassRef["NSCoder"] = {"[:]":"NSObject","[-]":{"allowedClasses":{"abs":"Get the current set of coded classes that allow secure coding.","dec":"- (NSSet *)allowedClasses"},"allowsKeyedCoding":{"abs":"Returns a Boolean value that indicates whether the receiver supports keyed coding of objects.","dec":"- (BOOL)allowsKeyedCoding"},"containsValueForKey:":{"abs":"Returns a Boolean value that indicates whether an encoded value is available for a string.","dec":"- (BOOL)containsValueForKey:(NSString *)key"},"decodeArrayOfObjCType:count:at:":{"abs":"Decodes an array of count items, whose Objective-C type is given by itemType.","dec":"- (void)decodeArrayOfObjCType:(const char *)itemType count:(NSUInteger)count at:(void *)address"},"decodeBoolForKey:":{"abs":"Decodes and returns a boolean value that was previously encoded with encodeBool:forKey: and associated with the string key.","dec":"- (BOOL)decodeBoolForKey:(NSString *)key"},"decodeBytesForKey:returnedLength:":{"abs":"Decodes a buffer of data that was previously encoded with encodeBytes:length:forKey: and associated with the string key.","dec":"- (const uint8_t *)decodeBytesForKey:(NSString *)key returnedLength:(NSUInteger *)lengthp"},"decodeBytesWithReturnedLength:":{"abs":"Decodes a buffer of data whose types are unspecified.","dec":"- (void *)decodeBytesWithReturnedLength:(NSUInteger *)numBytes"},"decodeDataObject":{"abs":"Decodes and returns an NSData object that was previously encoded with encodeDataObject:. Subclasses must override this method.","dec":"- (NSData *)decodeDataObject"},"decodeDoubleForKey:":{"abs":"Decodes and returns a double value that was previously encoded with either encodeFloat:forKey: or encodeDouble:forKey: and associated with the string key.","dec":"- (double)decodeDoubleForKey:(NSString *)key"},"decodeFloatForKey:":{"abs":"Decodes and returns a float value that was previously encoded with encodeFloat:forKey: or encodeDouble:forKey: and associated with the string key.","dec":"- (float)decodeFloatForKey:(NSString *)key"},"decodeInt32ForKey:":{"abs":"Decodes and returns a 32-bit integer value that was previously encoded with encodeInt:forKey:, encodeInteger:forKey:, encodeInt32:forKey:, or encodeInt64:forKey: and associated with the string key.","dec":"- (int32_t)decodeInt32ForKey:(NSString *)key"},"decodeInt64ForKey:":{"abs":"Decodes and returns a 64-bit integer value that was previously encoded with encodeInt:forKey:, encodeInteger:forKey:, encodeInt32:forKey:, or encodeInt64:forKey: and associated with the string key.","dec":"- (int64_t)decodeInt64ForKey:(NSString *)key"},"decodeIntegerForKey:":{"abs":"Decodes and returns an NSInteger value that was previously encoded with encodeInt:forKey:, encodeInteger:forKey:, encodeInt32:forKey:, or encodeInt64:forKey: and associated with the string key.","dec":"- (NSInteger)decodeIntegerForKey:(NSString *)key"},"decodeIntForKey:":{"abs":"Decodes and returns an int value that was previously encoded with encodeInt:forKey:, encodeInteger:forKey:, encodeInt32:forKey:, or encodeInt64:forKey: and associated with the string key.","dec":"- (int)decodeIntForKey:(NSString *)key"},"decodeObject":{"abs":"Decodes an Objective-C object that was previously encoded with any of the encode...Object: methods.","dec":"- (id)decodeObject"},"decodeObjectForKey:":{"abs":"Decodes and returns an Objective-C object that was previously encoded with encodeObject:forKey: or encodeConditionalObject:forKey: and associated with the string key.","dec":"- (id)decodeObjectForKey:(NSString *)key"},"decodeObjectOfClass:forKey:":{"abs":"Decodes an object for the key, restricted to the specified class.","dec":"- (id)decodeObjectOfClass:(Class)aClass forKey:(NSString *)key"},"decodeObjectOfClasses:forKey:":{"abs":"Decodes an object for the key, restricted to the specified classes.","dec":"- (id)decodeObjectOfClasses:(NSSet *)classes forKey:(NSString *)key"},"decodePropertyListForKey:":{"abs":"Returns a decoded property list for the specified key.","dec":"- (id)decodePropertyListForKey:(NSString *)key"},"decodeValueOfObjCType:at:":{"abs":"Decodes a single value, whose Objective-C type is given by valueType.","dec":"- (void)decodeValueOfObjCType:(const char *)valueType at:(void *)data"},"decodeValuesOfObjCTypes:":{"abs":"Decodes a series of potentially different Objective-C types.","dec":"- (void)decodeValuesOfObjCTypes:(const char *)valueTypes, ..."},"encodeArrayOfObjCType:count:at:":{"abs":"Encodes an array of count items, whose Objective-C type is given by itemType.","dec":"- (void)encodeArrayOfObjCType:(const char *)itemType count:(NSUInteger)count at:(const void *)address"},"encodeBool:forKey:":{"abs":"Encodes boolv and associates it with the string key.","dec":"- (void)encodeBool:(BOOL)boolv forKey:(NSString *)key"},"encodeBycopyObject:":{"abs":"Can be overridden by subclasses to encode object so that a copy, rather than a proxy, is created upon decoding.","dec":"- (void)encodeBycopyObject:(id)object"},"encodeByrefObject:":{"abs":"Can be overridden by subclasses to encode object so that a proxy, rather than a copy, is created upon decoding.","dec":"- (void)encodeByrefObject:(id)object"},"encodeBytes:length:":{"abs":"Encodes a buffer of data whose types are unspecified.","dec":"- (void)encodeBytes:(const void *)address length:(NSUInteger)numBytes"},"encodeBytes:length:forKey:":{"abs":"Encodes a buffer of data, bytesp, whose length is specified by lenv, and associates it with the string key.","dec":"- (void)encodeBytes:(const uint8_t *)bytesp length:(NSUInteger)lenv forKey:(NSString *)key"},"encodeConditionalObject:":{"abs":"Can be overridden by subclasses to conditionally encode object, preserving common references to that object.","dec":"- (void)encodeConditionalObject:(id)object"},"encodeConditionalObject:forKey:":{"abs":"Conditionally encodes a reference to objv and associates it with the string key only if objv has been unconditionally encoded with encodeObject:forKey:.","dec":"- (void)encodeConditionalObject:(id)objv forKey:(NSString *)key"},"encodeDataObject:":{"abs":"Encodes a given NSData object.","dec":"- (void)encodeDataObject:(NSData *)data"},"encodeDouble:forKey:":{"abs":"Encodes realv and associates it with the string key.","dec":"- (void)encodeDouble:(double)realv forKey:(NSString *)key"},"encodeFloat:forKey:":{"abs":"Encodes realv and associates it with the string key.","dec":"- (void)encodeFloat:(float)realv forKey:(NSString *)key"},"encodeInt32:forKey:":{"abs":"Encodes the 32-bit integer intv and associates it with the string key.","dec":"- (void)encodeInt32:(int32_t)intv forKey:(NSString *)key"},"encodeInt64:forKey:":{"abs":"Encodes the 64-bit integer intv and associates it with the string key.","dec":"- (void)encodeInt64:(int64_t)intv forKey:(NSString *)key"},"encodeInt:forKey:":{"abs":"Encodes intv and associates it with the string key.","dec":"- (void)encodeInt:(int)intv forKey:(NSString *)key"},"encodeInteger:forKey:":{"abs":"Encodes a given NSInteger and associates it with a given key.","dec":"- (void)encodeInteger:(NSInteger)intv forKey:(NSString *)key"},"encodeObject:":{"abs":"Encodes object.","dec":"- (void)encodeObject:(id)object"},"encodeObject:forKey:":{"abs":"Encodes the object objv and associates it with the string key.","dec":"- (void)encodeObject:(id)objv forKey:(NSString *)key"},"encodeRootObject:":{"abs":"Can be overridden by subclasses to encode an interconnected group of Objective-C objects, starting with rootObject.","dec":"- (void)encodeRootObject:(id)rootObject"},"encodeValueOfObjCType:at:":{"abs":"Must be overridden by subclasses to encode a single value residing at address, whose Objective-C type is given by valueType.","dec":"- (void)encodeValueOfObjCType:(const char *)valueType at:(const void *)address"},"encodeValuesOfObjCTypes:":{"abs":"Encodes a series of values of potentially differing Objective-C types.","dec":"- (void)encodeValuesOfObjCTypes:(const char *)valueTypes, ..."},"objectZone":{"abs":"This method is present for historical reasons and has no effect.","dec":"- (NSZone *)objectZone"},"requiresSecureCoding":{"abs":"Returns whether the coder requires secure coding.","dec":"- (BOOL)requiresSecureCoding"},"setObjectZone:":{"abs":"This method is present for historical reasons and has no effect.","dec":"- (void)setObjectZone:(NSZone *)zone"},"systemVersion":{"abs":"During encoding, this method should return the system version currently in effect.","dec":"- (unsigned)systemVersion"},"versionForClassName:":{"abs":"This method is present for historical reasons and is not used with keyed archivers.","dec":"- (NSInteger)versionForClassName:(NSString *)className"}}};