ClassRef["SKNode"] = {"[:]":"UIResponder : NSObject","[.]":{"alpha":{"abs":"The transparency value applied to the node’s contents.","dec":"@property(nonatomic) CGFloat alpha"},"children":{"abs":"The node’s children. (read-only)","dec":"@property(readonly, nonatomic) NSArray *children"},"frame":{"abs":"A rectangle in the parent’s coordinate system that contains the node’s content, ignoring the node’s children. (read-only)","dec":"@property(readonly, nonatomic) CGRect frame"},"hidden":{"abs":"A Boolean value that determines whether a node and its descendants are rendered.","dec":"@property(getter=isHidden, nonatomic) BOOL hidden"},"name":{"abs":"The node’s assignable name.","dec":"@property(copy, nonatomic) NSString *name"},"parent":{"abs":"The node’s parent node. (read-only)","dec":"@property(readonly, nonatomic) SKNode *parent"},"paused":{"abs":"A Boolean value that determines whether actions on the node and its descendants are processed.","dec":"@property(getter=isPaused, nonatomic) BOOL paused"},"physicsBody":{"abs":"The physics body associated with the node.","dec":"@property(retain, nonatomic) SKPhysicsBody *physicsBody"},"position":{"abs":"The position of the node in its parent's coordinate system.","dec":"@property(nonatomic) CGPoint position"},"scene":{"abs":"The scene node that contains the node. (read-only)","dec":"@property(readonly, nonatomic) SKScene *scene"},"speed":{"abs":"A speed modifier applied to all actions executed by a node and its descendants.","dec":"@property(nonatomic) CGFloat speed"},"userData":{"abs":"A dictionary containing arbitrary data.","dec":"@property(retain, nonatomic) NSMutableDictionary *userData"},"userInteractionEnabled":{"abs":"A Boolean value that indicates whether the node receives touch events.","dec":"@property(getter=isUserInteractionEnabled) BOOL userInteractionEnabled"},"xScale":{"abs":"A scaling factor that multiplies the width of a node and its children.","dec":"@property(nonatomic) CGFloat xScale"},"yScale":{"abs":"A scaling factor that multiplies the height of a node and its children.","dec":"@property(nonatomic) CGFloat yScale"},"zPosition":{"abs":"The height of the node relative to its parent.","dec":"@property(nonatomic) CGFloat zPosition"},"zRotation":{"abs":"The Euler rotation about the z axis (in radians).","dec":"@property(nonatomic) CGFloat zRotation"}},"[+]":{"node":{"abs":"Creates a new node.","dec":"+ (instancetype)node"}},"[-]":{"actionForKey:":{"abs":"Returns an action associated with a specific key.","dec":"- (SKAction *)actionForKey:(NSString *)key"},"addChild:":{"abs":"Adds a node to the end of the receiver’s list of child nodes.","dec":"- (void)addChild:(SKNode *)node"},"calculateAccumulatedFrame":{"abs":"Calculates a rectangle in the parent’s coordinate system that contains the content of the node and all of its descendants.","dec":"- (CGRect)calculateAccumulatedFrame"},"childNodeWithName:":{"abs":"Searches the children of the receiving node for a node with a specific name.","dec":"- (SKNode *)childNodeWithName:(NSString *)name"},"containsPoint:":{"abs":"Returns a Boolean value that indicates whether a point lies inside the node’s bounding box.","dec":"- (BOOL)containsPoint:(CGPoint)p"},"convertPoint:fromNode:":{"abs":"Converts a point from the coordinate system of another node in the node tree to the coordinate system of this node.","dec":"- (CGPoint)convertPoint:(CGPoint)point fromNode:(SKNode *)node"},"convertPoint:toNode:":{"abs":"Converts a point in this node’s coordinate system to the coordinate system of another node in the node tree.","dec":"- (CGPoint)convertPoint:(CGPoint)point toNode:(SKNode *)node"},"enumerateChildNodesWithName:usingBlock:":{"abs":"Search the children of the receiving node to perform processing for nodes which share a name.","dec":"- (void)enumerateChildNodesWithName:(NSString *)name usingBlock:(void (^)(SKNode *node, BOOL *stop))block"},"hasActions":{"abs":"Returns a Boolean value that indicates whether the node is executing actions.","dec":"- (BOOL)hasActions"},"inParentHierarchy:":{"abs":"Returns a Boolean value that indicates whether the node is a descendant of the target node.","dec":"- (BOOL)inParentHierarchy:(SKNode *)parent"},"insertChild:atIndex:":{"abs":"Inserts a child into a specific position in the receiver’s list of child nodes.","dec":"- (void)insertChild:(SKNode *)node atIndex:(NSInteger)index"},"intersectsNode:":{"abs":"Returns a Boolean value that indicates whether this node intersects the specified node.","dec":"- (BOOL)intersectsNode:(SKNode *)node"},"nodeAtPoint:":{"abs":"Returns the deepest descendant that intersects a point.","dec":"- (SKNode *)nodeAtPoint:(CGPoint)p"},"nodesAtPoint:":{"abs":"Returns an array of all descendants that intersect a point.","dec":"- (NSArray *)nodesAtPoint:(CGPoint)p"},"removeActionForKey:":{"abs":"Removes an action associated with a specific key.","dec":"- (void)removeActionForKey:(NSString *)key"},"removeAllActions":{"abs":"Ends and removes all actions from the node.","dec":"- (void)removeAllActions"},"removeAllChildren":{"abs":"Removes all of the node’s children.","dec":"- (void)removeAllChildren"},"removeChildrenInArray:":{"abs":"Removes a list of children from the receiving node.","dec":"- (void)removeChildrenInArray:(NSArray *)nodes"},"removeFromParent":{"abs":"Removes the receiving node from its parent.","dec":"- (void)removeFromParent"},"runAction:":{"abs":"Adds an action to the list of actions executed by the node.","dec":"- (void)runAction:(SKAction *)action"},"runAction:completion:":{"abs":"Adds an action to the list of actions executed by the node. Your block is called when the action completes.","dec":"- (void)runAction:(SKAction *)action completion:(void (^)(void))block"},"runAction:withKey:":{"abs":"Adds an identifiable action to the list of actions executed by the node.","dec":"- (void)runAction:(SKAction *)action withKey:(NSString *)key"},"setScale:":{"abs":"Sets the xScale and yScale properties of the node.","dec":"- (void)setScale:(CGFloat)scale"}},"[=]":{"SKBlendModeAlpha":"","SKBlendModeAdd":"","SKBlendModeSubtract":"","SKBlendModeMultiply":"","SKBlendModeMultiplyX2":"","SKBlendModeScreen":"","SKBlendModeReplace":""}};