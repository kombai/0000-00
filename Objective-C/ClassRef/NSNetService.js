ClassRef["NSNetService"] = {"[:]":"NSObject","[.]":{"addresses":{"abs":"A read-only array containing NSData objects, each of which contains a socket address for the service. (read-only)","dec":"@property(readonly, copy) NSArray *addresses"},"delegate":{"abs":"The delegate for the receiver.","dec":"@property(assign) id<NSNetServiceDelegate> delegate"},"domain":{"abs":"A string containing the domain for this service. (read-only)","dec":"@property(readonly, copy) NSString *domain"},"hostName":{"abs":"A string containing the DNS hostname for this service. (read-only)","dec":"@property(readonly, copy) NSString *hostName"},"name":{"abs":"A string containing the name of this service. (read-only)","dec":"@property(readonly, copy) NSString *name"},"port":{"abs":"The port on which the service is listening for connections. (read-only)","dec":"@property(readonly) NSInteger port"},"type":{"abs":"The type of the published service. (read-only)","dec":"@property(readonly, copy) NSString *type"}},"[+]":{"dataFromTXTRecordDictionary:":{"abs":"Returns an NSData object representing a TXT record formed from a given dictionary.","dec":"+ (NSData *)dataFromTXTRecordDictionary:(NSDictionary *)txtDictionary"},"dictionaryFromTXTRecordData:":{"abs":"Returns a dictionary representing a TXT record given as an NSData object.","dec":"+ (NSDictionary *)dictionaryFromTXTRecordData:(NSData *)txtData"}},"[-]":{"getInputStream:outputStream:":{"abs":"Creates a pair of input and output streams for the receiver and returns a Boolean value that indicates whether they were retrieved successfully.","dec":"- (BOOL)getInputStream:(out NSInputStream **)inputStream outputStream:(out NSOutputStream **)outputStream"},"initWithDomain:type:name:":{"abs":"Returns the receiver, initialized as a network service of a given type and sets the initial host information.","dec":"- (id)initWithDomain:(NSString *)domain type:(NSString *)type name:(NSString *)name"},"initWithDomain:type:name:port:":{"abs":"Initializes the receiver for publishing a network service of type type at the socket location specified by domain, name, and port.","dec":"- (id)initWithDomain:(NSString *)domain type:(NSString *)type name:(NSString *)name port:(int)port"},"publish":{"abs":"Attempts to advertise the receiverâ€™s on the network.","dec":"- (void)publish"},"publishWithOptions:":{"abs":"Attempts to advertise the receiver on the network, with the given options.","dec":"- (void)publishWithOptions:(NSNetServiceOptions)serviceOptions"},"removeFromRunLoop:forMode:":{"abs":"Removes the service from the given run loop for a given mode.","dec":"- (void)removeFromRunLoop:(NSRunLoop *)aRunLoop forMode:(NSString *)mode"},"resolveWithTimeout:":{"abs":"Starts a resolve process of a finite duration for the receiver.","dec":"- (void)resolveWithTimeout:(NSTimeInterval)timeout"},"scheduleInRunLoop:forMode:":{"abs":"Adds the service to the specified run loop.","dec":"- (void)scheduleInRunLoop:(NSRunLoop *)aRunLoop forMode:(NSString *)mode"},"setTXTRecordData:":{"abs":"Sets the TXT record for the receiver, and returns a Boolean value that indicates whether the operation was successful.","dec":"- (BOOL)setTXTRecordData:(NSData *)recordData"},"startMonitoring":{"abs":"Starts the monitoring of TXT-record updates for the receiver.","dec":"- (void)startMonitoring"},"stop":{"abs":"Halts a currently running attempt to publish or resolve a service.","dec":"- (void)stop"},"stopMonitoring":{"abs":"Stops the monitoring of TXT-record updates for the receiver.","dec":"- (void)stopMonitoring"},"TXTRecordData":{"abs":"Returns the TXT record for the receiver.","dec":"- (NSData *)TXTRecordData"}},"[=]":{"NSNetServicesErrorCode":"","NSNetServicesErrorDomain":"","NSNetServicesUnknownError":"","NSNetServicesCollisionError":"","NSNetServicesNotFoundError":"","NSNetServicesActivityInProgress":"","NSNetServicesBadArgumentError":"","NSNetServicesCancelledError":"","NSNetServicesInvalidError":"","NSNetServicesTimeoutError":"","NSNetServiceNoAutoRename":"","NSNetServiceListenForConnections":""}};