ClassRef["NSThread"] = {"[:]":"NSObject","[+]":{"callStackReturnAddresses":{"abs":"Returns an array containing the call stack return addresses.","dec":"+ (NSArray *)callStackReturnAddresses"},"callStackSymbols":{"abs":"Returns an array containing the call stack symbols.","dec":"+ (NSArray *)callStackSymbols"},"currentThread":{"abs":"Returns the thread object representing the current thread of execution.","dec":"+ (NSThread *)currentThread"},"detachNewThreadSelector:toTarget:withObject:":{"abs":"Detaches a new thread and uses the specified selector as the thread entry point.","dec":"+ (void)detachNewThreadSelector:(SEL)aSelector toTarget:(id)aTarget withObject:(id)anArgument"},"exit":{"abs":"Terminates the current thread.","dec":"+ (void)exit"},"isMainThread":{"abs":"Returns a Boolean value that indicates whether the current thread is the main thread.","dec":"+ (BOOL)isMainThread"},"isMultiThreaded":{"abs":"Returns whether the application is multithreaded.","dec":"+ (BOOL)isMultiThreaded"},"mainThread":{"abs":"Returns the NSThread object representing the main thread.","dec":"+ (NSThread *)mainThread"},"setThreadPriority:":{"abs":"Sets the current thread’s priority.","dec":"+ (BOOL)setThreadPriority:(double)priority"},"sleepForTimeInterval:":{"abs":"Sleeps the thread for a given time interval.","dec":"+ (void)sleepForTimeInterval:(NSTimeInterval)ti"},"sleepUntilDate:":{"abs":"Blocks the current thread until the time specified.","dec":"+ (void)sleepUntilDate:(NSDate *)aDate"},"threadPriority":{"abs":"Returns the current thread’s priority.","dec":"+ (double)threadPriority"}},"[-]":{"cancel":{"abs":"Changes the cancelled state of the receiver to indicate that it should exit.","dec":"- (void)cancel"},"init":{"abs":"Returns an initialized NSThread object.","dec":"- (id)init"},"initWithTarget:selector:object:":{"abs":"Returns an NSThread object initialized with the given arguments.","dec":"- (id)initWithTarget:(id)target selector:(SEL)selector object:(id)argument"},"isCancelled":{"abs":"Returns a Boolean value that indicates whether the receiver is cancelled.","dec":"- (BOOL)isCancelled"},"isExecuting":{"abs":"Returns a Boolean value that indicates whether the receiver is executing.","dec":"- (BOOL)isExecuting"},"isFinished":{"abs":"Returns a Boolean value that indicates whether the receiver has finished execution.","dec":"- (BOOL)isFinished"},"isMainThread":{"abs":"Returns a Boolean value that indicates whether the receiver is the main thread.","dec":"- (BOOL)isMainThread"},"main":{"abs":"The main entry point routine for the thread.","dec":"- (void)main"},"name":{"abs":"Returns the name of the receiver.","dec":"- (NSString *)name"},"setName:":{"abs":"Sets the name of the receiver.","dec":"- (void)setName:(NSString *)n"},"setStackSize:":{"abs":"Sets the stack size of the receiver.","dec":"- (void)setStackSize:(NSUInteger)s"},"setThreadPriority:":{"abs":"Sets the receiver’s priority.","dec":"- (void)setThreadPriority:(double)priority"},"stackSize":{"abs":"Returns the stack size of the receiver.","dec":"- (NSUInteger)stackSize"},"start":{"abs":"Starts the receiver.","dec":"- (void)start"},"threadDictionary":{"abs":"Returns the thread object's dictionary.","dec":"- (NSMutableDictionary *)threadDictionary"},"threadPriority":{"abs":"Returns the receiver’s priority","dec":"- (double)threadPriority"}}};