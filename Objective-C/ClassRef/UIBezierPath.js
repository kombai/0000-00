ClassRef.UIBezierPath = {"[:]":"NSObject","[.]":{"bounds":{"abs":"The bounding rectangle of the path. (read-only)","dec":"@property(nonatomic, readonly) CGRect bounds"},"CGPath":{"abs":"The Core Graphics representation of the path.","dec":"@property(nonatomic) CGPathRef CGPath"},"currentPoint":{"abs":"The current point in the graphics path. (read-only)","dec":"@property(nonatomic, readonly) CGPoint currentPoint"},"empty":{"abs":"A Boolean value indicating whether the path has any valid elements. (read-only)","dec":"@property(readonly, getter=isEmpty) BOOL empty"},"flatness":{"abs":"The factor that determines the rendering accuracy for curved path segments.","dec":"@property(nonatomic) CGFloat flatness"},"lineCapStyle":{"abs":"The shape of the paths end points when stroked.","dec":"@property(nonatomic) CGLineCap lineCapStyle"},"lineJoinStyle":{"abs":"The shape of the joints between connected segments of a stroked path.","dec":"@property(nonatomic) CGLineJoin lineJoinStyle"},"lineWidth":{"abs":"The line width of the path.","dec":"@property(nonatomic) CGFloat lineWidth"},"miterLimit":{"abs":"The limiting value that helps avoid spikes at junctions between connected line segments.","dec":"@property(nonatomic) CGFloat miterLimit"},"usesEvenOddFillRule":{"abs":"A Boolean indicating whether the even-odd winding rule is in use for drawing paths.","dec":"@property(nonatomic) BOOL usesEvenOddFillRule"}},"[+]":{"bezierPath":{"abs":"Creates and returns a new UIBezierPath object.","dec":"+ (UIBezierPath *)bezierPath"},"bezierPathWithArcCenter:radius:startAngle:endAngle:clockwise:":{"abs":"Creates and returns a new UIBezierPath object initialized with an arc of a circle.","dec":"+ (UIBezierPath *)bezierPathWithArcCenter:(CGPoint)center radius:(CGFloat)radius startAngle:(CGFloat)startAngle endAngle:(CGFloat)endAngle clockwise:(BOOL)clockwise"},"bezierPathWithCGPath:":{"abs":"Creates and returns a new UIBezierPath object initialized with the contents of a Core Graphics path.","dec":"+ (UIBezierPath *)bezierPathWithCGPath:(CGPathRef)CGPath"},"bezierPathWithOvalInRect:":{"abs":"Creates and returns a new UIBezierPath object initialized with an oval path inscribed in the specified rectangle","dec":"+ (UIBezierPath *)bezierPathWithOvalInRect:(CGRect)rect"},"bezierPathWithRect:":{"abs":"Creates and returns a new UIBezierPath object initialized with a rectangular path.","dec":"+ (UIBezierPath *)bezierPathWithRect:(CGRect)rect"},"bezierPathWithRoundedRect:byRoundingCorners:cornerRadii:":{"abs":"Creates and returns a new UIBezierPath object initialized with a rounded rectangular path.","dec":"+ (UIBezierPath *)bezierPathWithRoundedRect:(CGRect)rect byRoundingCorners:(UIRectCorner)corners cornerRadii:(CGSize)cornerRadii"},"bezierPathWithRoundedRect:cornerRadius:":{"abs":"Creates and returns a new UIBezierPath object initialized with a rounded rectangular path.","dec":"+ (UIBezierPath *)bezierPathWithRoundedRect:(CGRect)rect cornerRadius:(CGFloat)cornerRadius"}},"[-]":{"addArcWithCenter:radius:startAngle:endAngle:clockwise:":{"abs":"Appends an arc to the receiver’s path.","dec":"- (void)addArcWithCenter:(CGPoint)center radius:(CGFloat)radius startAngle:(CGFloat)startAngle endAngle:(CGFloat)endAngle clockwise:(BOOL)clockwise"},"addClip":{"abs":"Intersects the area enclosed by the receiver’s path with the clipping path of the current graphics context and makes the resulting shape the current clipping path.","dec":"- (void)addClip"},"addCurveToPoint:controlPoint1:controlPoint2:":{"abs":"Appends a cubic Bézier curve to the receiver’s path.","dec":"- (void)addCurveToPoint:(CGPoint)endPoint controlPoint1:(CGPoint)controlPoint1 controlPoint2:(CGPoint)controlPoint2"},"addLineToPoint:":{"abs":"Appends a straight line to the receiver’s path.","dec":"- (void)addLineToPoint:(CGPoint)point"},"addQuadCurveToPoint:controlPoint:":{"abs":"Appends a quadratic Bézier curve to the receiver’s path.","dec":"- (void)addQuadCurveToPoint:(CGPoint)endPoint controlPoint:(CGPoint)controlPoint"},"appendPath:":{"abs":"Appends the contents of the specified path object to the receiver’s path.","dec":"- (void)appendPath:(UIBezierPath *)bezierPath"},"applyTransform:":{"abs":"Transforms all points in the path using the specified affine transform matrix.","dec":"- (void)applyTransform:(CGAffineTransform)transform"},"bezierPathByReversingPath":{"abs":"Creates and returns a new bezier path object with the reversed contents of the current path.","dec":"- (UIBezierPath *)bezierPathByReversingPath"},"closePath":{"abs":"Closes the most recently added subpath.","dec":"- (void)closePath"},"containsPoint:":{"abs":"Returns a Boolean value indicating whether the area enclosed by the receiver contains the specified point.","dec":"- (BOOL)containsPoint:(CGPoint)point"},"fill":{"abs":"Paints the region enclosed by the receiver’s path using the current drawing properties.","dec":"- (void)fill"},"fillWithBlendMode:alpha:":{"abs":"Paints the region enclosed by the receiver’s path using the specified blend mode and transparency values.","dec":"- (void)fillWithBlendMode:(CGBlendMode)blendMode alpha:(CGFloat)alpha"},"getLineDash:count:phase:":{"abs":"Retrieves the line-stroking pattern for the path.","dec":"- (void)getLineDash:(CGFloat *)pattern count:(NSInteger *)count phase:(CGFloat *)phase"},"moveToPoint:":{"abs":"Moves the receiver’s current point to the specified location.","dec":"- (void)moveToPoint:(CGPoint)point"},"removeAllPoints":{"abs":"Removes all points from the receiver, effectively deleting all subpaths.","dec":"- (void)removeAllPoints"},"setLineDash:count:phase:":{"abs":"Sets the line-stroking pattern for the path.","dec":"- (void)setLineDash:(const CGFloat *)pattern count:(NSInteger)count phase:(CGFloat)phase"},"stroke":{"abs":"Draws a line along the receiver’s path using the current drawing properties.","dec":"- (void)stroke"},"strokeWithBlendMode:alpha:":{"abs":"Draws a line along the receiver’s path using the specified blend mode and transparency values.","dec":"- (void)strokeWithBlendMode:(CGBlendMode)blendMode alpha:(CGFloat)alpha"}},"[=]":{"UIRectCornerTopLeft":"","UIRectCornerTopRight":"","UIRectCornerBottomLeft":"","UIRectCornerBottomRight":"","UIRectCornerAllCorners":""}};