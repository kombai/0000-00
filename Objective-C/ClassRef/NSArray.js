ClassRef["NSArray"] = {"[:]":"NSObject","[+]":{"array":{"abs":"Creates and returns an empty array.","dec":"+ (instancetype)array"},"arrayWithArray:":{"abs":"Creates and returns an array containing the objects in another given array.","dec":"+ (instancetype)arrayWithArray:(NSArray *)anArray"},"arrayWithContentsOfFile:":{"abs":"Creates and returns an array containing the contents of the file specified by a given path.","dec":"+ (id)arrayWithContentsOfFile:(NSString *)aPath"},"arrayWithContentsOfURL:":{"abs":"Creates and returns an array containing the contents specified by a given URL.","dec":"+ (id)arrayWithContentsOfURL:(NSURL *)aURL"},"arrayWithObject:":{"abs":"Creates and returns an array containing a given object.","dec":"+ (instancetype)arrayWithObject:(id)anObject"},"arrayWithObjects:":{"abs":"Creates and returns an array containing the objects in the argument list.","dec":"+ (instancetype)arrayWithObjects:(id)firstObj,,..."},"arrayWithObjects:count:":{"abs":"Creates and returns an array that includes a given number of objects from a given C array.","dec":"+ (instancetype)arrayWithObjects:(const id [])objects count:(NSUInteger)count"}},"[-]":{"addObserver:forKeyPath:options:context:":{"abs":"Raises an exception.","dec":"- (void)addObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath options:(NSKeyValueObservingOptions)options context:(void *)context"},"addObserver:toObjectsAtIndexes:forKeyPath:options:context:":{"abs":"Registers an observer to receive key value observer notifications for the specified key-path relative to the objects at the indexes.","dec":"- (void)addObserver:(NSObject *)anObserver toObjectsAtIndexes:(NSIndexSet *)indexes forKeyPath:(NSString *)keyPath options:(NSKeyValueObservingOptions)options context:(void *)context"},"arrayByAddingObject:":{"abs":"Returns a new array that is a copy of the receiving array with a given object added to the end.","dec":"- (NSArray *)arrayByAddingObject:(id)anObject"},"arrayByAddingObjectsFromArray:":{"abs":"Returns a new array that is a copy of the receiving array with the objects contained in another array added to the end.","dec":"- (NSArray *)arrayByAddingObjectsFromArray:(NSArray *)otherArray"},"componentsJoinedByString:":{"abs":"Constructs and returns an NSString object that is the result of interposing a given separator between the elements of the array.","dec":"- (NSString *)componentsJoinedByString:(NSString *)separator"},"containsObject:":{"abs":"Returns a Boolean value that indicates whether a given object is present in the array.","dec":"- (BOOL)containsObject:(id)anObject"},"count":{"abs":"Returns the number of objects currently in the array.","dec":"- (NSUInteger)count"},"description":{"abs":"Returns a string that represents the contents of the array, formatted as a property list.","dec":"- (NSString *)description"},"descriptionWithLocale:":{"abs":"Returns a string that represents the contents of the array, formatted as a property list.","dec":"- (NSString *)descriptionWithLocale:(id)locale"},"descriptionWithLocale:indent:":{"abs":"Returns a string that represents the contents of the array, formatted as a property list.","dec":"- (NSString *)descriptionWithLocale:(id)locale indent:(NSUInteger)level"},"enumerateObjectsAtIndexes:options:usingBlock:":{"abs":"Executes a given block using the objects in the array at the specified indexes.","dec":"- (void)enumerateObjectsAtIndexes:(NSIndexSet *)indexSet options:(NSEnumerationOptions)opts usingBlock:(void (^)(id obj, NSUInteger idx, BOOL *stop))block"},"enumerateObjectsUsingBlock:":{"abs":"Executes a given block using each object in the array, starting with the first object and continuing through the array to the last object.","dec":"- (void)enumerateObjectsUsingBlock:(void (^)(id obj, NSUInteger idx, BOOL *stop))block"},"enumerateObjectsWithOptions:usingBlock:":{"abs":"Executes a given block using each object in the array.","dec":"- (void)enumerateObjectsWithOptions:(NSEnumerationOptions)opts usingBlock:(void (^)(id obj, NSUInteger idx, BOOL *stop))block"},"filteredArrayUsingPredicate:":{"abs":"Evaluates a given predicate against each object in the receiving array and returns a new array containing the objects for which the predicate returns true.","dec":"- (NSArray *)filteredArrayUsingPredicate:(NSPredicate *)predicate"},"firstObject":{"abs":"Returns the first object in the array.","dec":"- (id)firstObject"},"firstObjectCommonWithArray:":{"abs":"Returns the first object contained in the receiving array that’s equal to an object in another given array.","dec":"- (id)firstObjectCommonWithArray:(NSArray *)otherArray"},"getObjects:range:":{"abs":"Copies the objects contained in the array that fall within the specified range to aBuffer.","dec":"- (void)getObjects:(id __unsafe_unretained [])objects range:(NSRange)range"},"indexesOfObjectsAtIndexes:options:passingTest:":{"abs":"Returns the indexes, from a given set of indexes, of objects in the array that pass a test in a given Block for a given set of enumeration options.","dec":"- (NSIndexSet *)indexesOfObjectsAtIndexes:(NSIndexSet *)indexSet options:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate"},"indexesOfObjectsPassingTest:":{"abs":"Returns the indexes of objects in the array that pass a test in a given Block.","dec":"- (NSIndexSet *)indexesOfObjectsPassingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate"},"indexesOfObjectsWithOptions:passingTest:":{"abs":"Returns the indexes of objects in the array that pass a test in a given Block for a given set of enumeration options.","dec":"- (NSIndexSet *)indexesOfObjectsWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate"},"indexOfObject:":{"abs":"Returns the lowest index whose corresponding array value is equal to a given object.","dec":"- (NSUInteger)indexOfObject:(id)anObject"},"indexOfObject:inRange:":{"abs":"Returns the lowest index within a specified range whose corresponding array value is equal to a given object .","dec":"- (NSUInteger)indexOfObject:(id)anObject inRange:(NSRange)range"},"indexOfObject:inSortedRange:options:usingComparator:":{"abs":"Returns the index, within a specified range, of an object compared with elements in the array using a given NSComparator block.","dec":"- (NSUInteger)indexOfObject:(id)obj inSortedRange:(NSRange)r options:(NSBinarySearchingOptions)opts usingComparator:(NSComparator)cmp"},"indexOfObjectAtIndexes:options:passingTest:":{"abs":"Returns the index, from a given set of indexes, of the first object in the array that passes a test in a given Block for a given set of enumeration options.","dec":"- (NSUInteger)indexOfObjectAtIndexes:(NSIndexSet *)indexSet options:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate"},"indexOfObjectIdenticalTo:":{"abs":"Returns the lowest index whose corresponding array value is identical to a given object.","dec":"- (NSUInteger)indexOfObjectIdenticalTo:(id)anObject"},"indexOfObjectIdenticalTo:inRange:":{"abs":"Returns the lowest index within a specified range whose corresponding array value is equal to a given object .","dec":"- (NSUInteger)indexOfObjectIdenticalTo:(id)anObject inRange:(NSRange)range"},"indexOfObjectPassingTest:":{"abs":"Returns the index of the first object in the array that passes a test in a given Block.","dec":"- (NSUInteger)indexOfObjectPassingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate"},"indexOfObjectWithOptions:passingTest:":{"abs":"Returns the index of an object in the array that passes a test in a given Block for a given set of enumeration options.","dec":"- (NSUInteger)indexOfObjectWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate"},"init":{"abs":"Initializes a newly allocated array.","dec":"- (instancetype)init"},"initWithArray:":{"abs":"Initializes a newly allocated array by placing in it the objects contained in a given array.","dec":"- (instancetype)initWithArray:(NSArray *)anArray"},"initWithArray:copyItems:":{"abs":"Initializes a newly allocated array using anArray as the source of data objects for the array.","dec":"- (instancetype)initWithArray:(NSArray *)array copyItems:(BOOL)flag"},"initWithContentsOfFile:":{"abs":"Initializes a newly allocated array with the contents of the file specified by a given path.","dec":"- (id)initWithContentsOfFile:(NSString *)aPath"},"initWithContentsOfURL:":{"abs":"Initializes a newly allocated array with the contents of the location specified by a given URL.","dec":"- (id)initWithContentsOfURL:(NSURL *)aURL"},"initWithObjects:":{"abs":"Initializes a newly allocated array by placing in it the objects in the argument list.","dec":"- (instancetype)initWithObjects:(id)firstObj,,..."},"initWithObjects:count:":{"abs":"Initializes a newly allocated array to include a given number of objects from a given C array.","dec":"- (instancetype)initWithObjects:(const id [])objects count:(NSUInteger)count"},"isEqualToArray:":{"abs":"Compares the receiving array to another array.","dec":"- (BOOL)isEqualToArray:(NSArray *)otherArray"},"lastObject":{"abs":"Returns the last object in the array.","dec":"- (id)lastObject"},"makeObjectsPerformSelector:":{"abs":"Sends to each object in the array the message identified by a given selector, starting with the first object and continuing through the array to the last object.","dec":"- (void)makeObjectsPerformSelector:(SEL)aSelector"},"makeObjectsPerformSelector:withObject:":{"abs":"Sends the aSelector message to each object in the array, starting with the first object and continuing through the array to the last object.","dec":"- (void)makeObjectsPerformSelector:(SEL)aSelector withObject:(id)anObject"},"objectAtIndex:":{"abs":"Returns the object located at the specified index.","dec":"- (id)objectAtIndex:(NSUInteger)index"},"objectAtIndexedSubscript:":{"abs":"Returns the object at the specified index.","dec":"- (id)objectAtIndexedSubscript:(NSUInteger)idx"},"objectEnumerator":{"abs":"Returns an enumerator object that lets you access each object in the array.","dec":"- (NSEnumerator *)objectEnumerator"},"objectsAtIndexes:":{"abs":"Returns an array containing the objects in the array at the indexes specified by a given index set.","dec":"- (NSArray *)objectsAtIndexes:(NSIndexSet *)indexes"},"pathsMatchingExtensions:":{"abs":"Returns an array containing all the pathname elements in the receiving array that have filename extensions from a given array.","dec":"- (NSArray *)pathsMatchingExtensions:(NSArray *)filterTypes"},"removeObserver:forKeyPath:":{"abs":"Raises an exception.","dec":"- (void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath"},"removeObserver:forKeyPath:context:":{"abs":"Raises an exception.","dec":"- (void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath context:(void *)context"},"removeObserver:fromObjectsAtIndexes:forKeyPath:":{"abs":"Removes anObserver from all key value observer notifications associated with the specified keyPath relative to the array’s objects at indexes.","dec":"- (void)removeObserver:(NSObject *)anObserver fromObjectsAtIndexes:(NSIndexSet *)indexes forKeyPath:(NSString *)keyPath"},"removeObserver:fromObjectsAtIndexes:forKeyPath:context:":{"abs":"Raises an exception.","dec":"- (void)removeObserver:(NSObject *)observer fromObjectsAtIndexes:(NSIndexSet *)indexes forKeyPath:(NSString *)keyPath context:(void *)context"},"reverseObjectEnumerator":{"abs":"Returns an enumerator object that lets you access each object in the array, in reverse order.","dec":"- (NSEnumerator *)reverseObjectEnumerator"},"setValue:forKey:":{"abs":"Invokes setValue:forKey: on each of the array's items using the specified value and key.","dec":"- (void)setValue:(id)value forKey:(NSString *)key"},"sortedArrayHint":{"abs":"Analyzes the array and returns a “hint” that speeds the sorting of the array when the hint is supplied to sortedArrayUsingFunction:context:hint:.","dec":"- (NSData *)sortedArrayHint"},"sortedArrayUsingComparator:":{"abs":"Returns an array that lists the receiving array’s elements in ascending order, as determined by the comparison method specified by a given NSComparator Block.","dec":"- (NSArray *)sortedArrayUsingComparator:(NSComparator)cmptr"},"sortedArrayUsingDescriptors:":{"abs":"Returns a copy of the receiving array sorted as specified by a given array of sort descriptors.","dec":"- (NSArray *)sortedArrayUsingDescriptors:(NSArray *)sortDescriptors"},"sortedArrayUsingFunction:context:":{"abs":"Returns a new array that lists the receiving array’s elements in ascending order as defined by the comparison function comparator.","dec":"- (NSArray *)sortedArrayUsingFunction:(NSInteger (*)(id, id, void *))comparator context:(void *)context"},"sortedArrayUsingFunction:context:hint:":{"abs":"Returns a new array that lists the receiving array’s elements in ascending order as defined by the comparison function comparator.","dec":"- (NSArray *)sortedArrayUsingFunction:(NSInteger (*)(id, id, void *))comparator context:(void *)context hint:(NSData *)hint"},"sortedArrayUsingSelector:":{"abs":"Returns an array that lists the receiving array’s elements in ascending order, as determined by the comparison method specified by a given selector.","dec":"- (NSArray *)sortedArrayUsingSelector:(SEL)comparator"},"sortedArrayWithOptions:usingComparator:":{"abs":"Returns an array that lists the receiving array’s elements in ascending order, as determined by the comparison method specified by a given NSComparator Block.","dec":"- (NSArray *)sortedArrayWithOptions:(NSSortOptions)opts usingComparator:(NSComparator)cmptr"},"subarrayWithRange:":{"abs":"Returns a new array containing the receiving array’s elements that fall within the limits specified by a given range.","dec":"- (NSArray *)subarrayWithRange:(NSRange)range"},"valueForKey:":{"abs":"Returns an array containing the results of invoking valueForKey: using key on each of the array's objects.","dec":"- (id)valueForKey:(NSString *)key"},"writeToFile:atomically:":{"abs":"Writes the contents of the array to a file at a given path.","dec":"- (BOOL)writeToFile:(NSString *)path atomically:(BOOL)flag"},"writeToURL:atomically:":{"abs":"Writes the contents of the array to the location specified by a given URL.","dec":"- (BOOL)writeToURL:(NSURL *)aURL atomically:(BOOL)flag"}},"[=]":{"NSBinarySearchingFirstEqual":"","NSBinarySearchingLastEqual":"","NSBinarySearchingInsertionIndex":""}};