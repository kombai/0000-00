ClassRef.UIControl = {"[:]":"UIView : UIResponder : NSObject","[.]":{"contentHorizontalAlignment":{"abs":"The horizontal alignment of content (text or image) within the receiver.","dec":"@property(nonatomic) UIControlContentHorizontalAlignment contentHorizontalAlignment"},"contentVerticalAlignment":{"abs":"The vertical alignment of content (text or image) within the receiver.","dec":"@property(nonatomic) UIControlContentVerticalAlignment contentVerticalAlignment"},"enabled":{"abs":"A Boolean value that determines whether the receiver is enabled.","dec":"@property(nonatomic, getter=isEnabled) BOOL enabled"},"highlighted":{"abs":"A Boolean value that determines whether the receiver is highlighted.","dec":"@property(nonatomic, getter=isHighlighted) BOOL highlighted"},"selected":{"abs":"A Boolean value that determines the receiver’s selected state.","dec":"@property(nonatomic, getter=isSelected) BOOL selected"},"state":{"abs":"A bitmask value that indicates the state of the receiver. (read-only)","dec":"@property(nonatomic, readonly) UIControlState state"},"touchInside":{"abs":"A Boolean value that indicates whether a touch is inside the bounds of the receiver. (read-only)","dec":"@property(nonatomic, readonly, getter=isTouchInside) BOOL touchInside"},"tracking":{"abs":"A Boolean value that indicates whether the receiver is currently tracking touches related to an event. (read-only)","dec":"@property(nonatomic, readonly, getter=isTracking) BOOL tracking"}},"[-]":{"actionsForTarget:forControlEvent:":{"abs":"Returns the actions that are associated with a target and a particular control event.","dec":"- (NSArray *)actionsForTarget:(id)target forControlEvent:(UIControlEvents)controlEvent"},"addTarget:action:forControlEvents:":{"abs":"Adds a target and action for a particular event (or events) to an internal dispatch table.","dec":"- (void)addTarget:(id)target action:(SEL)action forControlEvents:(UIControlEvents)controlEvents"},"allControlEvents":{"abs":"Returns all control events associated with the receiver.","dec":"- (UIControlEvents)allControlEvents"},"allTargets":{"abs":"Returns all target objects associated with the receiver.","dec":"- (NSSet *)allTargets"},"beginTrackingWithTouch:withEvent:":{"abs":"Sent to the control when a touch related to the given event enters the control’s bounds.","dec":"- (BOOL)beginTrackingWithTouch:(UITouch *)touch withEvent:(UIEvent *)event"},"cancelTrackingWithEvent:":{"abs":"Tells the control to cancel tracking related to the given event.","dec":"- (void)cancelTrackingWithEvent:(UIEvent *)event"},"continueTrackingWithTouch:withEvent:":{"abs":"Sent continuously to the control as it tracks a touch related to the given event within the control’s bounds.","dec":"- (BOOL)continueTrackingWithTouch:(UITouch *)touch withEvent:(UIEvent *)event"},"endTrackingWithTouch:withEvent:":{"abs":"Sent to the control when the last touch for the given event completely ends, telling it to stop tracking.","dec":"- (void)endTrackingWithTouch:(UITouch *)touch withEvent:(UIEvent *)event"},"removeTarget:action:forControlEvents:":{"abs":"Removes a target and action for a particular event (or events) from an internal dispatch table.","dec":"- (void)removeTarget:(id)target action:(SEL)action forControlEvents:(UIControlEvents)controlEvents"},"sendAction:to:forEvent:":{"abs":"In response to a given event, forwards an action message to the application object for dispatching to a target.","dec":"- (void)sendAction:(SEL)action to:(id)target forEvent:(UIEvent *)event"},"sendActionsForControlEvents:":{"abs":"Sends action messages for the given control events.","dec":"- (void)sendActionsForControlEvents:(UIControlEvents)controlEvents"}},"[=]":{"UIControlEventTouchDown":"","UIControlEventTouchDownRepeat":"","UIControlEventTouchDragInside":"","UIControlEventTouchDragOutside":"","UIControlEventTouchDragEnter":"","UIControlEventTouchDragExit":"","UIControlEventTouchUpInside":"","UIControlEventTouchUpOutside":"","UIControlEventTouchCancel":"","UIControlEventValueChanged":"","UIControlEventEditingDidBegin":"","UIControlEventEditingChanged":"","UIControlEventEditingDidEnd":"","UIControlEventEditingDidEndOnExit":"","UIControlEventAllTouchEvents":"","UIControlEventAllEditingEvents":"","UIControlEventApplicationReserved":"","UIControlEventSystemReserved":"","UIControlEventAllEvents":"","UIControlContentVerticalAlignmentCenter":"","UIControlContentVerticalAlignmentTop":"","UIControlContentVerticalAlignmentBottom":"","UIControlContentVerticalAlignmentFill":"","UIControlContentHorizontalAlignmentCenter":"","UIControlContentHorizontalAlignmentLeft":"","UIControlContentHorizontalAlignmentRight":"","UIControlContentHorizontalAlignmentFill":"","UIControlStateNormal":"","UIControlStateHighlighted":"","UIControlStateDisabled":"","UIControlStateSelected":"","UIControlStateApplication":"","UIControlStateReserved":""}};