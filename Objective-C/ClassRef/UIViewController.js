ClassRef.UIViewController = {"[:]":"UIResponder : NSObject","[.]":{"automaticallyAdjustsScrollViewInsets":{"abs":"Specifies whether or not the view controller should automatically adjust its scroll view insets.","dec":"@property(nonatomic, assign) BOOL automaticallyAdjustsScrollViewInsets"},"bottomLayoutGuide":{"abs":"Indicates the lowest vertical extent for your onscreen content, for use with Auto Layout constraints. (read-only)","dec":"@property(nonatomic, readonly, retain) id<UILayoutSupport> bottomLayoutGuide"},"childViewControllers":{"abs":"An array of the view controllers that are the children of the receiver in the view controller hierarchy. (read-only)","dec":"@property(nonatomic, readonly) NSArray *childViewControllers"},"definesPresentationContext":{"abs":"A Boolean value that indicates whether this view controller's view is covered when the view controller or one of its descendants presents a view controller.","dec":"@property(nonatomic, assign) BOOL definesPresentationContext"},"edgesForExtendedLayout":{"abs":"Indicates the extended edges to use for the layout.","dec":"@property(nonatomic, assign) UIRectEdge edgesForExtendedLayout"},"editing":{"abs":"A Boolean value indicating whether the view controller currently allows the user to edit the view contents.","dec":"@property(nonatomic, getter=isEditing) BOOL editing"},"extendedLayoutIncludesOpaqueBars":{"abs":"Indicates whether or not the extended layout includes opaque bars.","dec":"@property(nonatomic, assign) BOOL extendedLayoutIncludesOpaqueBars"},"hidesBottomBarWhenPushed":{"abs":"A Boolean value indicating whether the toolbar at the bottom of the screen is hidden when the view controller is pushed on to a navigation controller.","dec":"@property(nonatomic) BOOL hidesBottomBarWhenPushed"},"interfaceOrientation":{"abs":"Convenience property that provides the current orientation of the interface, meaningful only if the view controller is taking up the full screen. (read-only)","dec":"@property(nonatomic, readonly) UIInterfaceOrientation interfaceOrientation"},"modalInPopover":{"abs":"A Boolean value indicating whether the view controller should be presented modally by a popover.","dec":"@property(nonatomic, readwrite, getter=isModalInPopover) BOOL modalInPopover"},"modalPresentationCapturesStatusBarAppearance":{"abs":"Specifies whether a view controller, presented non–fullscreen, takes over control of status bar appearance from the presenting view controller.","dec":"@property(nonatomic, assign) BOOL modalPresentationCapturesStatusBarAppearance"},"modalPresentationStyle":{"abs":"The presentation style for modally presented view controllers.","dec":"@property(nonatomic, assign) UIModalPresentationStyle modalPresentationStyle"},"modalTransitionStyle":{"abs":"The transition style to use when presenting the receiver.","dec":"@property(nonatomic, assign) UIModalTransitionStyle modalTransitionStyle"},"navigationController":{"abs":"The nearest ancestor in the view controller hierarchy that is a navigation controller. (read-only)","dec":"@property(nonatomic, readonly, retain) UINavigationController *navigationController"},"navigationItem":{"abs":"The navigation item used to represent the view controller in a parent’s navigation bar. (read-only)","dec":"@property(nonatomic, readonly, retain) UINavigationItem *navigationItem"},"nibBundle":{"abs":"Return the name of the receiver’s nib bundle if it exists. (read-only)","dec":"@property(nonatomic, readonly, retain) NSBundle *nibBundle"},"nibName":{"abs":"Return the name of the receiver’s nib file, if one was specified. (read-only)","dec":"@property(nonatomic, readonly, copy) NSString *nibName"},"parentViewController":{"abs":"The parent view controller of the recipient. (read-only)","dec":"@property(nonatomic, readonly) UIViewController *parentViewController"},"preferredContentSize":{"abs":"The preferred content size for any container view that is laying out a child view controller.","dec":"@property(nonatomic) CGSize preferredContentSize"},"presentedViewController":{"abs":"The view controller that is presented by this view controller, or one of its ancestors in the view controller hierarchy. (read-only)","dec":"@property(nonatomic, readonly) UIViewController *presentedViewController"},"presentingViewController":{"abs":"The view controller that presented this view controller. (read-only)","dec":"@property(nonatomic, readonly) UIViewController *presentingViewController"},"providesPresentationContextTransitionStyle":{"abs":"A Boolean value that indicates whether the view controller defines the transition style for view controllers it presents.","dec":"@property(nonatomic, assign) BOOL providesPresentationContextTransitionStyle"},"restorationClass":{"abs":"The class responsible for recreating this view controller when restoring the app’s state.","dec":"@property(nonatomic, readwrite, assign) Class<UIViewControllerRestoration> *restorationClass"},"restorationIdentifier":{"abs":"The identifier that determines whether the view controller supports state restoration.","dec":"@property(nonatomic, copy) NSString *restorationIdentifier"},"searchDisplayController":{"abs":"The search display controller associated with the view controller. (read-only)","dec":"@property(nonatomic, readonly, retain) UISearchDisplayController *searchDisplayController"},"splitViewController":{"abs":"The nearest ancestor in the view controller hierarchy that is a split view controller. (read-only)","dec":"@property(nonatomic, readonly, retain) UISplitViewController *splitViewController"},"storyboard":{"abs":"The storyboard from which the view controller originated. (read-only)","dec":"@property(nonatomic, readonly, retain) UIStoryboard *storyboard"},"tabBarController":{"abs":"The nearest ancestor in the view controller hierarchy that is a tab bar controller. (read-only)","dec":"@property(nonatomic, readonly, retain) UITabBarController *tabBarController"},"tabBarItem":{"abs":"The tab bar item that represents the view controller when added to a tab bar controller.","dec":"@property(nonatomic, retain) UITabBarItem *tabBarItem"},"title":{"abs":"A localized string that represents the view this controller manages.","dec":"@property(nonatomic, copy) NSString *title"},"toolbarItems":{"abs":"The toolbar items associated with the view controller.","dec":"@property(nonatomic, retain) NSArray *toolbarItems"},"topLayoutGuide":{"abs":"Indicates the highest vertical extent for your onscreen content, for use with Auto Layout constraints. (read-only)","dec":"@property(nonatomic, readonly, retain) id<UILayoutSupport> topLayoutGuide"},"transitioningDelegate":{"abs":"The delegate object that provides transition animator and interactive controller objects.","dec":"@property(nonatomic, assign) id<UIViewControllerTransitioningDelegate> transitioningDelegate"},"view":{"abs":"The view that the controller manages.","dec":"@property(nonatomic, retain) UIView *view"}},"[+]":{"attemptRotationToDeviceOrientation":{"abs":"Attempts to rotate all windows to the orientation of the device.","dec":"+ (void)attemptRotationToDeviceOrientation"}},"[-]":{"addChildViewController:":{"abs":"Adds the given view controller as a child.","dec":"- (void)addChildViewController:(UIViewController *)childController"},"applicationFinishedRestoringState":{"abs":"Called on restored view controllers after other object decoding is complete.","dec":"- (void)applicationFinishedRestoringState"},"beginAppearanceTransition:animated:":{"abs":"Tells a child controller its appearance is about to change.","dec":"- (void)beginAppearanceTransition:(BOOL)isAppearing animated:(BOOL)animated"},"canPerformUnwindSegueAction:fromViewController:withSender:":{"abs":"Called on a view controller to determine whether it wants to respond to an unwind action.","dec":"- (BOOL)canPerformUnwindSegueAction:(SEL)action fromViewController:(UIViewController *)fromViewController withSender:(id)sender"},"childViewControllerForStatusBarHidden":{"abs":"Called when the system needs the view controller to use for determining status bar hidden/unhidden state.","dec":"- (UIViewController *)childViewControllerForStatusBarHidden"},"childViewControllerForStatusBarStyle":{"abs":"Called when the system needs the view controller to use for determining status bar style.","dec":"- (UIViewController *)childViewControllerForStatusBarStyle"},"decodeRestorableStateWithCoder:":{"abs":"Decodes and restores state-related information for the view controller.","dec":"- (void)decodeRestorableStateWithCoder:(NSCoder *)coder"},"didMoveToParentViewController:":{"abs":"Called after the view controller is added or removed from a container view controller.","dec":"- (void)didMoveToParentViewController:(UIViewController *)parent"},"didReceiveMemoryWarning":{"abs":"Sent to the view controller when the app receives a memory warning.","dec":"- (void)didReceiveMemoryWarning"},"didRotateFromInterfaceOrientation:":{"abs":"Sent to the view controller after the user interface rotates.","dec":"- (void)didRotateFromInterfaceOrientation:(UIInterfaceOrientation)fromInterfaceOrientation"},"disablesAutomaticKeyboardDismissal":{"abs":"Returns a Boolean indicating whether the current input view is dismissed automatically when changing controls.","dec":"- (BOOL)disablesAutomaticKeyboardDismissal"},"dismissViewControllerAnimated:completion:":{"abs":"Dismisses the view controller that was presented by the receiver.","dec":"- (void)dismissViewControllerAnimated:(BOOL)flag completion:(void (^)(void))completion"},"editButtonItem":{"abs":"Returns a bar button item that toggles its title and associated state between Edit and Done.","dec":"- (UIBarButtonItem *)editButtonItem"},"encodeRestorableStateWithCoder:":{"abs":"Encodes state-related information for the view controller.","dec":"- (void)encodeRestorableStateWithCoder:(NSCoder *)coder"},"endAppearanceTransition":{"abs":"Tells a child controller its appearance has changed.","dec":"- (void)endAppearanceTransition"},"initWithNibName:bundle:":{"abs":"Returns a newly initialized view controller with the nib file in the specified bundle.","dec":"- (id)initWithNibName:(NSString *)nibName bundle:(NSBundle *)nibBundle"},"isBeingDismissed":{"abs":"Returns a Boolean value that indicates whether the view controller is in the process of being dismissed by one of its ancestors.","dec":"- (BOOL)isBeingDismissed"},"isBeingPresented":{"abs":"Returns a Boolean value that indicates whether the view controller is in the process of being presented by one of its ancestors.","dec":"- (BOOL)isBeingPresented"},"isMovingFromParentViewController":{"abs":"Returns a Boolean value that indicates that the view controller is in the process of being removed from its parent.","dec":"- (BOOL)isMovingFromParentViewController"},"isMovingToParentViewController":{"abs":"Returns a Boolean value that indicates that the view controller is in the process of being added to a parent.","dec":"- (BOOL)isMovingToParentViewController"},"isViewLoaded":{"abs":"Returns a Boolean value indicating whether the view is currently loaded into memory.","dec":"- (BOOL)isViewLoaded"},"loadView":{"abs":"Creates the view that the controller manages.","dec":"- (void)loadView"},"performSegueWithIdentifier:sender:":{"abs":"Initiates the segue with the specified identifier from the view controller’s storyboard file.","dec":"- (void)performSegueWithIdentifier:(NSString *)identifier sender:(id)sender"},"preferredInterfaceOrientationForPresentation":{"abs":"Returns the interface orientation to use when presenting the view controller.","dec":"- (UIInterfaceOrientation)preferredInterfaceOrientationForPresentation"},"preferredStatusBarStyle":{"abs":"The preferred status bar style for the view controller.","dec":"- (UIStatusBarStyle)preferredStatusBarStyle"},"preferredStatusBarUpdateAnimation":{"abs":"Specifies the animation style to use for hiding and showing the status bar for the view controller.","dec":"- (UIStatusBarAnimation)preferredStatusBarUpdateAnimation"},"prefersStatusBarHidden":{"abs":"Specifies whether the view controller prefers the status bar to be hidden or shown.","dec":"- (BOOL)prefersStatusBarHidden"},"prepareForSegue:sender:":{"abs":"Notifies the view controller that a segue is about to be performed.","dec":"- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender"},"presentViewController:animated:completion:":{"abs":"Presents a view controller.","dec":"- (void)presentViewController:(UIViewController *)viewControllerToPresent animated:(BOOL)flag completion:(void (^)(void))completion"},"removeFromParentViewController":{"abs":"Removes the receiver from its parent in the view controller hierarchy.","dec":"- (void)removeFromParentViewController"},"rotatingFooterView":{"abs":"Returns the footer view to transition during an interface orientation change.","dec":"- (UIView *)rotatingFooterView"},"rotatingHeaderView":{"abs":"Returns the header view to transition during an interface orientation change.","dec":"- (UIView *)rotatingHeaderView"},"segueForUnwindingToViewController:fromViewController:identifier:":{"abs":"Called when an unwind segue action needs to transition between two view controllers.","dec":"- (UIStoryboardSegue *)segueForUnwindingToViewController:(UIViewController *)toViewController fromViewController:(UIViewController *)fromViewController identifier:(NSString *)identifier"},"setEditing:animated:":{"abs":"Sets whether the view controller shows an editable view.","dec":"- (void)setEditing:(BOOL)editing animated:(BOOL)animated"},"setNeedsStatusBarAppearanceUpdate":{"abs":"Indicates to the system that the view controller status bar attributes have changed.","dec":"- (void)setNeedsStatusBarAppearanceUpdate"},"setToolbarItems:animated:":{"abs":"Sets the toolbar items to be displayed along with the view controller.","dec":"- (void)setToolbarItems:(NSArray *)toolbarItems animated:(BOOL)animated"},"shouldAutomaticallyForwardAppearanceMethods":{"abs":"Returns a Boolean value indicating whether appearance methods are forwarded to child view controllers.","dec":"- (BOOL)shouldAutomaticallyForwardAppearanceMethods"},"shouldAutomaticallyForwardRotationMethods":{"abs":"Returns a Boolean value indicating whether rotation methods are forwarded to child view controllers.","dec":"- (BOOL)shouldAutomaticallyForwardRotationMethods"},"shouldAutorotate":{"abs":"Returns whether the view controller’s contents should auto rotate.","dec":"- (BOOL)shouldAutorotate"},"shouldPerformSegueWithIdentifier:sender:":{"abs":"Determines whether the segue with the specified identifier should be triggered.","dec":"- (BOOL)shouldPerformSegueWithIdentifier:(NSString *)identifier sender:(id)sender"},"supportedInterfaceOrientations":{"abs":"Returns all of the interface orientations that the view controller supports.","dec":"- (NSUInteger)supportedInterfaceOrientations"},"transitionCoordinator":{"abs":"Returns a transition coordinator.","dec":"- (id<UIViewControllerTransitionCoordinator>)transitionCoordinator"},"transitionFromViewController:toViewController:duration:options:animations:completion:":{"abs":"Transitions between two of the view controller’s child view controllers.","dec":"- (void)transitionFromViewController:(UIViewController *)fromViewController toViewController:(UIViewController *)toViewController duration:(NSTimeInterval)duration options:(UIViewAnimationOptions)options animations:(void (^)(void))animations completion:(void (^)(BOOL finished))completion"},"updateViewConstraints":{"abs":"Called when the view controller’s view needs to update its constraints.","dec":"- (void)updateViewConstraints"},"viewControllerForUnwindSegueAction:fromViewController:withSender:":{"abs":"Called when an unwind segue action wants to search a container’s children for a view controller to handle the unwind action.","dec":"- (UIViewController *)viewControllerForUnwindSegueAction:(SEL)action fromViewController:(UIViewController *)fromViewController withSender:(id)sender"},"viewDidAppear:":{"abs":"Notifies the view controller that its view was added to a view hierarchy.","dec":"- (void)viewDidAppear:(BOOL)animated"},"viewDidDisappear:":{"abs":"Notifies the view controller that its view was removed from a view hierarchy.","dec":"- (void)viewDidDisappear:(BOOL)animated"},"viewDidLayoutSubviews":{"abs":"Called to notify the view controller that its view has just laid out its subviews.","dec":"- (void)viewDidLayoutSubviews"},"viewDidLoad":{"abs":"Called after the controller’s view is loaded into memory.","dec":"- (void)viewDidLoad"},"viewWillAppear:":{"abs":"Notifies the view controller that its view is about to be added to a view hierarchy.","dec":"- (void)viewWillAppear:(BOOL)animated"},"viewWillDisappear:":{"abs":"Notifies the view controller that its view is about to be removed from a view hierarchy.","dec":"- (void)viewWillDisappear:(BOOL)animated"},"viewWillLayoutSubviews":{"abs":"Called to notify the view controller that its view is about to layout its subviews.","dec":"- (void)viewWillLayoutSubviews"},"willAnimateRotationToInterfaceOrientation:duration:":{"abs":"Sent to the view controller before performing a one-step user interface rotation.","dec":"- (void)willAnimateRotationToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation duration:(NSTimeInterval)duration"},"willMoveToParentViewController:":{"abs":"Called just before the view controller is added or removed from a container view controller.","dec":"- (void)willMoveToParentViewController:(UIViewController *)parent"},"willRotateToInterfaceOrientation:duration:":{"abs":"Sent to the view controller just before the user interface begins rotating.","dec":"- (void)willRotateToInterfaceOrientation:(UIInterfaceOrientation)toInterfaceOrientation duration:(NSTimeInterval)duration"}},"[=]":{"UIModalTransitionStyleCoverVertical":"","UIModalTransitionStyleFlipHorizontal":"","UIModalTransitionStyleCrossDissolve":"","UIModalTransitionStylePartialCurl":"","UIModalPresentationFullScreen":"","UIModalPresentationPageSheet":"","UIModalPresentationFormSheet":"","UIModalPresentationCurrentContext":"","UIModalPresentationCustom":"","UIModalPresentationNone":"","UIViewControllerHierarchyInconsistencyException":""}};