ClassRef["NSExpression"] = {"[:]":"NSObject","[+]":{"expressionForAggregate:":{"abs":"Returns a new aggregate expression for a given collection.","dec":"+ (NSExpression *)expressionForAggregate:(NSArray *)collection"},"expressionForAnyKey":{"abs":"Returns a new expression that represents any key for a Spotlight query.","dec":"+ (NSExpression *)expressionForAnyKey"},"expressionForBlock:arguments:":{"abs":"Creates an NSExpression object that will use the Block for evaluating objects.","dec":"+ (NSExpression *)expressionForBlock:(id (^)(id evaluatedObject, NSArray *expressions, NSMutableDictionary *context))block arguments:(NSArray *)arguments"},"expressionForConstantValue:":{"abs":"Returns a new expression that represents a given constant value.","dec":"+ (NSExpression *)expressionForConstantValue:(id)obj"},"expressionForEvaluatedObject":{"abs":"Returns a new expression that represents the object being evaluated.","dec":"+ (NSExpression *)expressionForEvaluatedObject"},"expressionForFunction:arguments:":{"abs":"Returns a new expression that will invoke one of the predefined functions.","dec":"+ (NSExpression *)expressionForFunction:(NSString *)name arguments:(NSArray *)parameters"},"expressionForFunction:selectorName:arguments:":{"abs":"Returns an expression which will return the result of invoking on a given target a selector with a given name using given arguments.","dec":"+ (NSExpression *)expressionForFunction:(NSExpression *)target selectorName:(NSString *)name arguments:(NSArray *)parameters"},"expressionForIntersectSet:with:":{"abs":"Returns a new NSExpression object that represent the intersection of a given set and collection.","dec":"+ (NSExpression *)expressionForIntersectSet:(NSExpression *)left with:(NSExpression *)right"},"expressionForKeyPath:":{"abs":"Returns a new expression that invokes valueForKeyPath: with a given key path.","dec":"+ (NSExpression *)expressionForKeyPath:(NSString *)keyPath"},"expressionForMinusSet:with:":{"abs":"Returns a new NSExpression object that represent the subtraction of a given collection from a given set.","dec":"+ (NSExpression *)expressionForMinusSet:(NSExpression *)left with:(NSExpression *)right"},"expressionForSubquery:usingIteratorVariable:predicate:":{"abs":"Returns an expression that filters a collection by storing elements in the collection in a given variable and keeping the elements for which qualifier returns true.","dec":"+ (NSExpression *)expressionForSubquery:(NSExpression *)expression usingIteratorVariable:(NSString *)variable predicate:(id)predicate"},"expressionForUnionSet:with:":{"abs":"Returns a new NSExpression object that represent the union of a given set and collection.","dec":"+ (NSExpression *)expressionForUnionSet:(NSExpression *)left with:(NSExpression *)right"},"expressionForVariable:":{"abs":"Returns a new expression that extracts a value from the variable bindings dictionary for a given key.","dec":"+ (NSExpression *)expressionForVariable:(NSString *)string"},"expressionWithFormat:":{"abs":"Initializes the receiver with the specified expression arguments.","dec":"+ (NSExpression *)expressionWithFormat:(NSString *)expressionFormat,, ..."},"expressionWithFormat:argumentArray:":{"abs":"Initializes the receiver with the specified expression format and array of arguments.","dec":"+ (NSExpression *)expressionWithFormat:(NSString *)expressionFormat argumentArray:(NSArray *)arguments"},"expressionWithFormat:arguments:":{"abs":"Initializes the receiver with the specified expression format and arguments list.","dec":"+ (NSExpression *)expressionWithFormat:(NSString *)expressionFormat arguments:(va_list)argList"}},"[-]":{"allowEvaluation":{"abs":"Force an expression that was securely decoded to allow evaluation.","dec":"- (void)allowEvaluation"},"arguments":{"abs":"Returns the arguments for the receiver.","dec":"- (NSArray *)arguments"},"collection":{"abs":"Returns the collection of expressions in an aggregate expression, or the collection element of a subquery expression.","dec":"- (id)collection"},"constantValue":{"abs":"Returns the constant value of the receiver.","dec":"- (id)constantValue"},"expressionBlock":{"abs":"Returns the expressionâ€™s expression Block.","dec":"- (id (^)(id, NSArray *, NSMutableDictionary *))expressionBlock"},"expressionType":{"abs":"Returns the expression type for the receiver.","dec":"- (NSExpressionType)expressionType"},"expressionValueWithObject:context:":{"abs":"Evaluates an expression using a given object and context.","dec":"- (id)expressionValueWithObject:(id)object context:(NSMutableDictionary *)context"},"function":{"abs":"Returns the function for the receiver.","dec":"- (NSString *)function"},"initWithExpressionType:":{"abs":"Initializes the receiver with the specified expression type.","dec":"- (id)initWithExpressionType:(NSExpressionType)type"},"keyPath":{"abs":"Returns the key path for the receiver.","dec":"- (NSString *)keyPath"},"leftExpression":{"abs":"Returns the left expression of an aggregate expression.","dec":"- (NSExpression *)leftExpression"},"operand":{"abs":"Returns the operand for the receiver.","dec":"- (NSExpression *)operand"},"predicate":{"abs":"Return the predicate of a subquery expression.","dec":"- (NSPredicate *)predicate"},"rightExpression":{"abs":"Returns the right expression of an aggregate expression.","dec":"- (NSExpression *)rightExpression"},"variable":{"abs":"Returns the variable for the receiver.","dec":"- (NSString *)variable"}},"[=]":{"NSConstantValueExpressionType":"","NSEvaluatedObjectExpressionType":"","NSVariableExpressionType":"","NSKeyPathExpressionType":"","NSFunctionExpressionType":"","NSUnionSetExpressionType":"","NSIntersectSetExpressionType":"","NSMinusSetExpressionType":"","NSSubqueryExpressionType":"","NSAggregateExpressionType":"","NSAnyKeyExpressionType":"","NSBlockExpressionType":""}};