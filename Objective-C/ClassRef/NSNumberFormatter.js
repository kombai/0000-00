ClassRef["NSNumberFormatter"] = {"[:]":"NSFormatter : NSObject","[+]":{"defaultFormatterBehavior":{"abs":"Returns an NSNumberFormatterBehavior constant that indicates default formatter behavior for new instances of NSNumberFormatter.","dec":"+ (NSNumberFormatterBehavior)defaultFormatterBehavior"},"localizedStringFromNumber:numberStyle:":{"abs":"Returns a localized number string with the specified style.","dec":"+ (NSString *)localizedStringFromNumber:(NSNumber *)num numberStyle:(NSNumberFormatterStyle)localizationStyle"},"setDefaultFormatterBehavior:":{"abs":"Sets the default formatter behavior for new instances of NSNumberFormatter .","dec":"+ (void)setDefaultFormatterBehavior:(NSNumberFormatterBehavior)behavior"}},"[-]":{"allowsFloats":{"abs":"Returns a Boolean value that indicates whether the receiver allows floating-point values as input.","dec":"- (BOOL)allowsFloats"},"alwaysShowsDecimalSeparator":{"abs":"Returns a Boolean value that indicates whether the receiver always shows a decimal separator, even if the number is an integer.","dec":"- (BOOL)alwaysShowsDecimalSeparator"},"currencyCode":{"abs":"Returns the receiver’s currency code as a string.","dec":"- (NSString *)currencyCode"},"currencyDecimalSeparator":{"abs":"Returns the receiver’s currency decimal separator as a string.","dec":"- (NSString *)currencyDecimalSeparator"},"currencyGroupingSeparator":{"abs":"Returns the currency grouping separator for the receiver.","dec":"- (NSString *)currencyGroupingSeparator"},"currencySymbol":{"abs":"Returns the receiver’s local currency symbol.","dec":"- (NSString *)currencySymbol"},"decimalSeparator":{"abs":"Returns a string containing the character the receiver uses to represent decimal separators.","dec":"- (NSString *)decimalSeparator"},"exponentSymbol":{"abs":"Returns the string the receiver uses as an exponent symbol.","dec":"- (NSString *)exponentSymbol"},"formatterBehavior":{"abs":"Returns an NSNumberFormatterBehavior constant that indicates the formatter behavior of the receiver.","dec":"- (NSNumberFormatterBehavior)formatterBehavior"},"formatWidth":{"abs":"Returns the format width of the receiver.","dec":"- (NSUInteger)formatWidth"},"generatesDecimalNumbers":{"abs":"Returns a Boolean value that indicates whether the receiver creates instances of NSDecimalNumber when it converts strings to number objects.","dec":"- (BOOL)generatesDecimalNumbers"},"getObjectValue:forString:range:error:":{"abs":"Returns by reference a cell-content object after creating it from a range of characters in a given string.","dec":"- (BOOL)getObjectValue:(out id *)anObject forString:(NSString *)aString range:(inout NSRange *)rangep error:(out NSError **)error"},"groupingSeparator":{"abs":"Returns a string containing the receiver’s grouping separator.","dec":"- (NSString *)groupingSeparator"},"groupingSize":{"abs":"Returns the receiver’s primary grouping size.","dec":"- (NSUInteger)groupingSize"},"internationalCurrencySymbol":{"abs":"Returns the international currency symbol used by the receiver.","dec":"- (NSString *)internationalCurrencySymbol"},"isLenient":{"abs":"Returns a Boolean value that indicates whether the receiver uses heuristics to guess at the number which is intended by a string.","dec":"- (BOOL)isLenient"},"isPartialStringValidationEnabled":{"abs":"Returns a Boolean value that indicates whether partial string validation is enabled.","dec":"- (BOOL)isPartialStringValidationEnabled"},"locale":{"abs":"Returns the locale of the receiver.","dec":"- (NSLocale *)locale"},"maximum":{"abs":"Returns the highest number allowed as input by the receiver.","dec":"- (NSNumber *)maximum"},"maximumFractionDigits":{"abs":"Returns the maximum number of digits after the decimal separator allowed as input and output by the receiver.","dec":"- (NSUInteger)maximumFractionDigits"},"maximumIntegerDigits":{"abs":"Returns the maximum number of integer digits allowed as input and output by the receiver.","dec":"- (NSUInteger)maximumIntegerDigits"},"maximumSignificantDigits":{"abs":"Returns the maximum number of significant digits for the receiver.","dec":"- (NSUInteger)maximumSignificantDigits"},"minimum":{"abs":"Returns the lowest number allowed as input by the receiver.","dec":"- (NSNumber *)minimum"},"minimumFractionDigits":{"abs":"Returns the minimum number of digits after the decimal separator allowed as input and output by the receiver.","dec":"- (NSUInteger)minimumFractionDigits"},"minimumIntegerDigits":{"abs":"Returns the minimum number of integer digits allowed as input and output by the receiver.","dec":"- (NSUInteger)minimumIntegerDigits"},"minimumSignificantDigits":{"abs":"Returns the minimum number of significant digits for the receiver.","dec":"- (NSUInteger)minimumSignificantDigits"},"minusSign":{"abs":"Returns the string the receiver uses to represent the minus sign.","dec":"- (NSString *)minusSign"},"multiplier":{"abs":"Returns the multiplier used by the receiver as an NSNumber object.","dec":"- (NSNumber *)multiplier"},"negativeFormat":{"abs":"Returns the format used by the receiver to display negative numbers.","dec":"- (NSString *)negativeFormat"},"negativeInfinitySymbol":{"abs":"Returns the symbol the receiver uses to represent negative infinity.","dec":"- (NSString *)negativeInfinitySymbol"},"negativePrefix":{"abs":"Returns the string the receiver inserts as a prefix to negative values.","dec":"- (NSString *)negativePrefix"},"negativeSuffix":{"abs":"Returns the string the receiver adds as a suffix to negative values.","dec":"- (NSString *)negativeSuffix"},"nilSymbol":{"abs":"Returns the string the receiver uses to represent a nil value.","dec":"- (NSString *)nilSymbol"},"notANumberSymbol":{"abs":"Returns the symbol the receiver uses to represent NaN (“not a number”) when it converts values.","dec":"- (NSString *)notANumberSymbol"},"numberFromString:":{"abs":"Returns an NSNumber object created by parsing a given string.","dec":"- (NSNumber *)numberFromString:(NSString *)string"},"numberStyle":{"abs":"Returns the number-formatter style of the receiver.","dec":"- (NSNumberFormatterStyle)numberStyle"},"paddingCharacter":{"abs":"Returns a string containing the padding character for the receiver.","dec":"- (NSString *)paddingCharacter"},"paddingPosition":{"abs":"Returns the padding position of the receiver.","dec":"- (NSNumberFormatterPadPosition)paddingPosition"},"percentSymbol":{"abs":"Returns the string that the receiver uses to represent the percent symbol.","dec":"- (NSString *)percentSymbol"},"perMillSymbol":{"abs":"Returns the string that the receiver uses for the per-thousands symbol.","dec":"- (NSString *)perMillSymbol"},"plusSign":{"abs":"Returns the string the receiver uses for the plus sign.","dec":"- (NSString *)plusSign"},"positiveFormat":{"abs":"Returns the format used by the receiver to display positive numbers.","dec":"- (NSString *)positiveFormat"},"positiveInfinitySymbol":{"abs":"Returns the string the receiver uses for the positive infinity symbol.","dec":"- (NSString *)positiveInfinitySymbol"},"positivePrefix":{"abs":"Returns the string the receiver uses as the prefix for positive values.","dec":"- (NSString *)positivePrefix"},"positiveSuffix":{"abs":"Returns the string the receiver uses as the suffix for positive values.","dec":"- (NSString *)positiveSuffix"},"roundingIncrement":{"abs":"Returns the rounding increment used by the receiver.","dec":"- (NSNumber *)roundingIncrement"},"roundingMode":{"abs":"Returns the rounding mode used by the receiver.","dec":"- (NSNumberFormatterRoundingMode)roundingMode"},"secondaryGroupingSize":{"abs":"Returns the size of secondary groupings for the receiver.","dec":"- (NSUInteger)secondaryGroupingSize"},"setAllowsFloats:":{"abs":"Sets whether the receiver allows as input floating-point values (that is, values that include the period character [.]).","dec":"- (void)setAllowsFloats:(BOOL)flag"},"setAlwaysShowsDecimalSeparator:":{"abs":"Controls whether the receiver always shows the decimal separator, even for integer numbers.","dec":"- (void)setAlwaysShowsDecimalSeparator:(BOOL)flag"},"setCurrencyCode:":{"abs":"Sets the receiver’s currency code.","dec":"- (void)setCurrencyCode:(NSString *)string"},"setCurrencyDecimalSeparator:":{"abs":"Sets the string used by the receiver as a decimal separator.","dec":"- (void)setCurrencyDecimalSeparator:(NSString *)string"},"setCurrencyGroupingSeparator:":{"abs":"Sets the currency grouping separator for the receiver.","dec":"- (void)setCurrencyGroupingSeparator:(NSString *)string"},"setCurrencySymbol:":{"abs":"Sets the string used by the receiver as a local currency symbol.","dec":"- (void)setCurrencySymbol:(NSString *)string"},"setDecimalSeparator:":{"abs":"Sets the character the receiver uses as a decimal separator.","dec":"- (void)setDecimalSeparator:(NSString *)newSeparator"},"setExponentSymbol:":{"abs":"Sets the string used by the receiver to represent the exponent symbol.","dec":"- (void)setExponentSymbol:(NSString *)string"},"setFormatterBehavior:":{"abs":"Sets the formatter behavior of the receiver.","dec":"- (void)setFormatterBehavior:(NSNumberFormatterBehavior)behavior"},"setFormatWidth:":{"abs":"Sets the format width used by the receiver.","dec":"- (void)setFormatWidth:(NSUInteger)number"},"setGeneratesDecimalNumbers:":{"abs":"Controls whether the receiver creates instances of NSDecimalNumber when it converts strings to number objects.","dec":"- (void)setGeneratesDecimalNumbers:(BOOL)flag"},"setGroupingSeparator:":{"abs":"Specifies the string used by the receiver for a grouping separator.","dec":"- (void)setGroupingSeparator:(NSString *)string"},"setGroupingSize:":{"abs":"Sets the grouping size of the receiver.","dec":"- (void)setGroupingSize:(NSUInteger)numDigits"},"setInternationalCurrencySymbol:":{"abs":"Sets the string used by the receiver for the international currency symbol.","dec":"- (void)setInternationalCurrencySymbol:(NSString *)string"},"setLenient:":{"abs":"Sets whether the receiver will use heuristics to guess at the number which is intended by a string.","dec":"- (void)setLenient:(BOOL)b"},"setLocale:":{"abs":"Sets the locale of the receiver.","dec":"- (void)setLocale:(NSLocale *)theLocale"},"setMaximum:":{"abs":"Sets the highest number the receiver allows as input.","dec":"- (void)setMaximum:(NSNumber *)aMaximum"},"setMaximumFractionDigits:":{"abs":"Sets the maximum number of digits after the decimal separator allowed as input and output by the receiver.","dec":"- (void)setMaximumFractionDigits:(NSUInteger)number"},"setMaximumIntegerDigits:":{"abs":"Sets the maximum number of integer digits allowed as input and output by the receiver.","dec":"- (void)setMaximumIntegerDigits:(NSUInteger)number"},"setMaximumSignificantDigits:":{"abs":"Sets the maximum number of significant digits for the receiver.","dec":"- (void)setMaximumSignificantDigits:(NSUInteger)number"},"setMinimum:":{"abs":"Sets the lowest number the receiver allows as input.","dec":"- (void)setMinimum:(NSNumber *)aMinimum"},"setMinimumFractionDigits:":{"abs":"Sets the minimum number of digits after the decimal separator allowed as input and output by the receiver.","dec":"- (void)setMinimumFractionDigits:(NSUInteger)number"},"setMinimumIntegerDigits:":{"abs":"Sets the minimum number of integer digits allowed as input and output by the receiver.","dec":"- (void)setMinimumIntegerDigits:(NSUInteger)number"},"setMinimumSignificantDigits:":{"abs":"Sets the minimum number of significant digits for the receiver.","dec":"- (void)setMinimumSignificantDigits:(NSUInteger)number"},"setMinusSign:":{"abs":"Sets the string used by the receiver for the minus sign.","dec":"- (void)setMinusSign:(NSString *)string"},"setMultiplier:":{"abs":"Sets the multiplier of the receiver.","dec":"- (void)setMultiplier:(NSNumber *)number"},"setNegativeFormat:":{"abs":"Sets the format the receiver uses to display negative values.","dec":"- (void)setNegativeFormat:(NSString *)aFormat"},"setNegativeInfinitySymbol:":{"abs":"Sets the string used by the receiver for the negative infinity symbol.","dec":"- (void)setNegativeInfinitySymbol:(NSString *)string"},"setNegativePrefix:":{"abs":"Sets the string the receiver uses as a prefix for negative values.","dec":"- (void)setNegativePrefix:(NSString *)string"},"setNegativeSuffix:":{"abs":"Sets the string the receiver uses as a suffix for negative values.","dec":"- (void)setNegativeSuffix:(NSString *)string"},"setNilSymbol:":{"abs":"Sets the string the receiver uses to represent nil values.","dec":"- (void)setNilSymbol:(NSString *)string"},"setNotANumberSymbol:":{"abs":"Sets the string the receiver uses to represent NaN (“not a number”).","dec":"- (void)setNotANumberSymbol:(NSString *)string"},"setNumberStyle:":{"abs":"Sets the number style used by the receiver.","dec":"- (void)setNumberStyle:(NSNumberFormatterStyle)style"},"setPaddingCharacter:":{"abs":"Sets the string that the receiver uses to pad numbers in the formatted string representation.","dec":"- (void)setPaddingCharacter:(NSString *)string"},"setPaddingPosition:":{"abs":"Sets the padding position used by the receiver.","dec":"- (void)setPaddingPosition:(NSNumberFormatterPadPosition)position"},"setPartialStringValidationEnabled:":{"abs":"Sets whether partial string validation is enabled for the receiver.","dec":"- (void)setPartialStringValidationEnabled:(BOOL)enabled"},"setPercentSymbol:":{"abs":"Sets the string used by the receiver to represent the percent symbol.","dec":"- (void)setPercentSymbol:(NSString *)string"},"setPerMillSymbol:":{"abs":"Sets the string used by the receiver to represent the per-mill (per-thousand) symbol.","dec":"- (void)setPerMillSymbol:(NSString *)string"},"setPlusSign:":{"abs":"Sets the string used by the receiver to represent the plus sign.","dec":"- (void)setPlusSign:(NSString *)string"},"setPositiveFormat:":{"abs":"Sets the format the receiver uses to display positive values.","dec":"- (void)setPositiveFormat:(NSString *)aFormat"},"setPositiveInfinitySymbol:":{"abs":"Sets the string used by the receiver for the positive infinity symbol.","dec":"- (void)setPositiveInfinitySymbol:(NSString *)string"},"setPositivePrefix:":{"abs":"Sets the string the receiver uses as the prefix for positive values.","dec":"- (void)setPositivePrefix:(NSString *)string"},"setPositiveSuffix:":{"abs":"Sets the string the receiver uses as the suffix for positive values.","dec":"- (void)setPositiveSuffix:(NSString *)string"},"setRoundingIncrement:":{"abs":"Sets the rounding increment used by the receiver.","dec":"- (void)setRoundingIncrement:(NSNumber *)number"},"setRoundingMode:":{"abs":"Sets the rounding mode used by the receiver.","dec":"- (void)setRoundingMode:(NSNumberFormatterRoundingMode)mode"},"setSecondaryGroupingSize:":{"abs":"Sets the secondary grouping size of the receiver.","dec":"- (void)setSecondaryGroupingSize:(NSUInteger)number"},"setTextAttributesForNegativeInfinity:":{"abs":"Sets the text attributes used to display the negative infinity symbol.","dec":"- (void)setTextAttributesForNegativeInfinity:(NSDictionary *)newAttributes"},"setTextAttributesForNegativeValues:":{"abs":"Sets the text attributes to be used in displaying negative values .","dec":"- (void)setTextAttributesForNegativeValues:(NSDictionary *)newAttributes"},"setTextAttributesForNil:":{"abs":"Sets the text attributes used to display the nil symbol.","dec":"- (void)setTextAttributesForNil:(NSDictionary *)newAttributes"},"setTextAttributesForNotANumber:":{"abs":"Sets the text attributes used to display the NaN (\"not a number\") string.","dec":"- (void)setTextAttributesForNotANumber:(NSDictionary *)newAttributes"},"setTextAttributesForPositiveInfinity:":{"abs":"Sets the text attributes used to display the positive infinity symbol.","dec":"- (void)setTextAttributesForPositiveInfinity:(NSDictionary *)newAttributes"},"setTextAttributesForPositiveValues:":{"abs":"Sets the text attributes to be used in displaying positive values.","dec":"- (void)setTextAttributesForPositiveValues:(NSDictionary *)newAttributes"},"setTextAttributesForZero:":{"abs":"Sets the text attributes used to display a zero value.","dec":"- (void)setTextAttributesForZero:(NSDictionary *)newAttributes"},"setUsesGroupingSeparator:":{"abs":"Controls whether the receiver displays the grouping separator.","dec":"- (void)setUsesGroupingSeparator:(BOOL)flag"},"setUsesSignificantDigits:":{"abs":"Sets whether the receiver uses significant digits.","dec":"- (void)setUsesSignificantDigits:(BOOL)b"},"setZeroSymbol:":{"abs":"Sets the string the receiver uses as the symbol to show the value zero.","dec":"- (void)setZeroSymbol:(NSString *)string"},"stringFromNumber:":{"abs":"Returns a string containing the formatted value of the provided number object.","dec":"- (NSString *)stringFromNumber:(NSNumber *)number"},"textAttributesForNegativeInfinity":{"abs":"Returns a dictionary containing the text attributes used to display the negative infinity string.","dec":"- (NSDictionary *)textAttributesForNegativeInfinity"},"textAttributesForNegativeValues":{"abs":"Returns a dictionary containing the text attributes that have been set for negative values.","dec":"- (NSDictionary *)textAttributesForNegativeValues"},"textAttributesForNil":{"abs":"Returns a dictionary containing the text attributes used to display the nil symbol.","dec":"- (NSDictionary *)textAttributesForNil"},"textAttributesForNotANumber":{"abs":"Returns a dictionary containing the text attributes used to display the NaN (\"not a number\") symbol.","dec":"- (NSDictionary *)textAttributesForNotANumber"},"textAttributesForPositiveInfinity":{"abs":"Returns a dictionary containing the text attributes used to display the positive infinity symbol.","dec":"- (NSDictionary *)textAttributesForPositiveInfinity"},"textAttributesForPositiveValues":{"abs":"Returns a dictionary containing the text attributes that have been set for positive values.","dec":"- (NSDictionary *)textAttributesForPositiveValues"},"textAttributesForZero":{"abs":"Returns a dictionary containing the text attributes used to display a value of zero.","dec":"- (NSDictionary *)textAttributesForZero"},"usesGroupingSeparator":{"abs":"Returns a Boolean value that indicates whether the receiver uses the grouping separator.","dec":"- (BOOL)usesGroupingSeparator"},"usesSignificantDigits":{"abs":"Returns a Boolean value that indicates whether the receiver uses significant digits.","dec":"- (BOOL)usesSignificantDigits"},"zeroSymbol":{"abs":"Returns the string the receiver uses as the symbol to show the value zero.","dec":"- (NSString *)zeroSymbol"}},"[=]":{"NSNumberFormatterNoStyle":"","NSNumberFormatterDecimalStyle":"","NSNumberFormatterCurrencyStyle":"","NSNumberFormatterPercentStyle":"","NSNumberFormatterScientificStyle":"","NSNumberFormatterSpellOutStyle":"","NSNumberFormatterBehaviorDefault":"","NSNumberFormatterBehavior10_0":"","NSNumberFormatterBehavior10_4":"","NSNumberFormatterPadBeforePrefix":"","NSNumberFormatterPadAfterPrefix":"","NSNumberFormatterPadBeforeSuffix":"","NSNumberFormatterPadAfterSuffix":"","NSNumberFormatterRoundCeiling":"","NSNumberFormatterRoundFloor":"","NSNumberFormatterRoundDown":"","NSNumberFormatterRoundUp":"","NSNumberFormatterRoundHalfEven":"","NSNumberFormatterRoundHalfDown":"","NSNumberFormatterRoundHalfUp":""}};