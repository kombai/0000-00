ClassRef.UISlider = {"[:]":"UIControl : UIView : UIResponder : NSObject","[.]":{"continuous":{"abs":"Contains a Boolean value indicating whether changes in the sliders value generate continuous update events.","dec":"@property(nonatomic, getter=isContinuous) BOOL continuous"},"currentMaximumTrackImage":{"abs":"Contains the maximum track image currently being used to render the receiver. (read-only)","dec":"@property(nonatomic, readonly) UIImage *currentMaximumTrackImage"},"currentMinimumTrackImage":{"abs":"Contains the minimum track image currently being used to render the receiver. (read-only)","dec":"@property(nonatomic, readonly) UIImage *currentMinimumTrackImage"},"currentThumbImage":{"abs":"Contains the thumb image currently being used to render the receiver. (read-only)","dec":"@property(nonatomic, readonly) UIImage *currentThumbImage"},"maximumTrackTintColor":{"abs":"The color used to tint the standard maximum track images.","dec":"@property(nonatomic, retain) UIColor *maximumTrackTintColor"},"maximumValue":{"abs":"Contains the maximum value of the receiver.","dec":"@property(nonatomic) float maximumValue"},"maximumValueImage":{"abs":"Contains the image that is drawn on the side of the slider representing the maximum value.","dec":"@property(nonatomic, retain) UIImage *maximumValueImage"},"minimumTrackTintColor":{"abs":"The color used to tint the standard minimum track images.","dec":"@property(nonatomic, retain) UIColor *minimumTrackTintColor"},"minimumValue":{"abs":"Contains the minimum value of the receiver.","dec":"@property(nonatomic) float minimumValue"},"minimumValueImage":{"abs":"Contains the image that is drawn on the side of the slider representing the minimum value.","dec":"@property(nonatomic, retain) UIImage *minimumValueImage"},"thumbTintColor":{"abs":"The color used to tint the standard thumb images.","dec":"@property(nonatomic, retain) UIColor *thumbTintColor"},"value":{"abs":"Contains the receiver’s current value.","dec":"@property(nonatomic) float value"}},"[-]":{"maximumTrackImageForState:":{"abs":"Returns the maximum track image associated with the specified control state.","dec":"- (UIImage *)maximumTrackImageForState:(UIControlState)state"},"maximumValueImageRectForBounds:":{"abs":"Returns the drawing rectangle for the maximum value image.","dec":"- (CGRect)maximumValueImageRectForBounds:(CGRect)bounds"},"minimumTrackImageForState:":{"abs":"Returns the minimum track image associated with the specified control state.","dec":"- (UIImage *)minimumTrackImageForState:(UIControlState)state"},"minimumValueImageRectForBounds:":{"abs":"Returns the drawing rectangle for the minimum value image.","dec":"- (CGRect)minimumValueImageRectForBounds:(CGRect)bounds"},"setMaximumTrackImage:forState:":{"abs":"Assigns a maximum track image to the specified control states.","dec":"- (void)setMaximumTrackImage:(UIImage *)image forState:(UIControlState)state"},"setMinimumTrackImage:forState:":{"abs":"Assigns a minimum track image to the specified control states.","dec":"- (void)setMinimumTrackImage:(UIImage *)image forState:(UIControlState)state"},"setThumbImage:forState:":{"abs":"Assigns a thumb image to the specified control states.","dec":"- (void)setThumbImage:(UIImage *)image forState:(UIControlState)state"},"setValue:animated:":{"abs":"Sets the receiver’s current value, allowing you to animate the change visually.","dec":"- (void)setValue:(float)value animated:(BOOL)animated"},"thumbImageForState:":{"abs":"Returns the thumb image associated with the specified control state.","dec":"- (UIImage *)thumbImageForState:(UIControlState)state"},"thumbRectForBounds:trackRect:value:":{"abs":"Returns the drawing rectangle for the slider’s thumb image.","dec":"- (CGRect)thumbRectForBounds:(CGRect)bounds trackRect:(CGRect)rect value:(float)value"},"trackRectForBounds:":{"abs":"Returns the drawing rectangle for the slider’s track.","dec":"- (CGRect)trackRectForBounds:(CGRect)bounds"}}};