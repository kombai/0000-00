ClassRef["NSURLSessionConfiguration"] = {"[:]":"NSObject","[.]":{"allowsCellularAccess":{"abs":"A Boolean value that determines whether connections should be made over a cellular network.","dec":"@property BOOL allowsCellularAccess"},"connectionProxyDictionary":{"abs":"A dictionary containing information about the HTTP proxy to use within this session.","dec":"@property(copy) NSDictionary *connectionProxyDictionary"},"discretionary":{"abs":"A Boolean value that determines whether background tasks can be scheduled at the discretion of the system for optimal performance.","dec":"@property(getter=isDiscretionary) BOOL discretionary"},"HTTPAdditionalHeaders":{"abs":"A dictionary of additional headers to send with requests.","dec":"@property(copy) NSDictionary *HTTPAdditionalHeaders"},"HTTPCookieAcceptPolicy":{"abs":"A policy constant that determines when cookies should be accepted.","dec":"@property NSHTTPCookieAcceptPolicy HTTPCookieAcceptPolicy"},"HTTPCookieStorage":{"abs":"The pool for storing cookies within this session.","dec":"@property(retain) NSHTTPCookieStorage *HTTPCookieStorage"},"HTTPMaximumConnectionsPerHost":{"abs":"The maximum number of simultaneous connections to make to a given host.","dec":"@property NSInteger HTTPMaximumConnectionsPerHost"},"HTTPShouldSetCookies":{"abs":"A Boolean value that determines whether requests should contain cookies from the cookie storage pool.","dec":"@property BOOL HTTPShouldSetCookies"},"HTTPShouldUsePipelining":{"abs":"A Boolean value that determines whether HTTP pipelining should be used.","dec":"@property BOOL HTTPShouldUsePipelining"},"identifier":{"abs":"The background session identifier specified when creating the configuration object. (read-only)","dec":"@property(readonly, copy) NSString *identifier"},"networkServiceType":{"abs":"The type of network service.","dec":"@property NSURLRequestNetworkServiceType networkServiceType"},"protocolClasses":{"abs":"An optional array of class objects that subclass NSURLProtocol.","dec":"@property(copy) NSArray *protocolClasses"},"requestCachePolicy":{"abs":"A predefined constant that determines when to return a response from the cache.","dec":"@property NSURLRequestCachePolicy requestCachePolicy"},"sessionSendsLaunchEvents":{"abs":"Whether the app should be resumed or launched in the background when needed.","dec":"@property BOOL sessionSendsLaunchEvents"},"timeoutIntervalForRequest":{"abs":"The timeout interval to use when waiting for additional data.","dec":"@property NSTimeInterval timeoutIntervalForRequest"},"timeoutIntervalForResource":{"abs":"The maximum amount of time that a resource request should be allowed to take.","dec":"@property NSTimeInterval timeoutIntervalForResource"},"TLSMaximumSupportedProtocol":{"abs":"The maximum TLS protocol version that the client should request when making connections in this session.","dec":"@property SSLProtocol TLSMaximumSupportedProtocol"},"TLSMinimumSupportedProtocol":{"abs":"The minimum TLS protocol that should be accepted during protocol negotiation.","dec":"@property SSLProtocol TLSMinimumSupportedProtocol"},"URLCache":{"abs":"The URL cache for providing cached responses to requests within the session.","dec":"@property(retain) NSURLCache *URLCache"},"URLCredentialStorage":{"abs":"A credential storage pool that provides stored credentials for authentication.","dec":"@property(retain) NSURLCredentialStorage *URLCredentialStorage"}},"[+]":{"backgroundSessionConfiguration:":{"abs":"Returns a preconfigured session configuration object that causes the upload or download to be performed in the background.","dec":"+ (NSURLSessionConfiguration *)backgroundSessionConfiguration:(NSString *)identifier"},"defaultSessionConfiguration":{"abs":"Returns a copy of the default session configuration.","dec":"+ (NSURLSessionConfiguration *)defaultSessionConfiguration"},"ephemeralSessionConfiguration":{"abs":"Returns a session configuration that uses no persistent storage for caches, cookies, or credentials.","dec":"+ (NSURLSessionConfiguration *)ephemeralSessionConfiguration"}}};