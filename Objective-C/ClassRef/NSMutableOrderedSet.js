ClassRef["NSMutableOrderedSet"] = {"[:]":"NSOrderedSet : NSObject","[+]":{"orderedSetWithCapacity:":{"abs":"Creates and returns an mutable ordered set with a given initial capacity.","dec":"+ (instancetype)orderedSetWithCapacity:(NSUInteger)numItems"}},"[-]":{"addObject:":{"abs":"Appends a given object to the mutable ordered set, if it is not already a member.","dec":"- (void)addObject:(id)object"},"addObjects:count:":{"abs":"Appends the given number of objects from a given C array.","dec":"- (void)addObjects:(const id [])objects count:(NSUInteger)count"},"addObjectsFromArray:":{"abs":"Appends to the mutable ordered set each object contained in a given array that is not already a member.","dec":"- (void)addObjectsFromArray:(NSArray *)array"},"exchangeObjectAtIndex:withObjectAtIndex:":{"abs":"Exchanges the object at the specified index with the object at the other index.","dec":"- (void)exchangeObjectAtIndex:(NSUInteger)idx1 withObjectAtIndex:(NSUInteger)idx2"},"filterUsingPredicate:":{"abs":"Evaluates a given predicate against the mutable ordered set’s content and leaves only objects that match.","dec":"- (void)filterUsingPredicate:(NSPredicate *)predicate"},"init":{"abs":"Initializes a newly allocated mutable ordered set.","dec":"- (instancetype)init"},"initWithCapacity:":{"abs":"Returns an initialized mutable ordered set with a given initial capacity.","dec":"- (instancetype)initWithCapacity:(NSUInteger)numItems"},"insertObject:atIndex:":{"abs":"Inserts the given object at the specified index of the mutable ordered set.","dec":"- (void)insertObject:(id)object atIndex:(NSUInteger)idx"},"insertObjects:atIndexes:":{"abs":"Inserts the objects in the array at the specified indexes.","dec":"- (void)insertObjects:(NSArray *)objects atIndexes:(NSIndexSet *)indexes"},"intersectOrderedSet:":{"abs":"Removes from the receiving ordered set each object that isn’t a member of another ordered set.","dec":"- (void)intersectOrderedSet:(NSOrderedSet *)other"},"intersectSet:":{"abs":"Removes from the receiving ordered set each object that isn’t a member of another set.","dec":"- (void)intersectSet:(NSSet *)other"},"minusOrderedSet:":{"abs":"Removes each object in another given ordered set from the receiving mutable ordered set, if present.","dec":"- (void)minusOrderedSet:(NSOrderedSet *)other"},"minusSet:":{"abs":"Removes each object in another given set from the receiving mutable ordered set, if present.","dec":"- (void)minusSet:(NSSet *)other"},"moveObjectsAtIndexes:toIndex:":{"abs":"Moves the objects at the specified indexes to the new location.","dec":"- (void)moveObjectsAtIndexes:(NSIndexSet *)indexes toIndex:(NSUInteger)idx"},"removeAllObjects":{"abs":"Removes all the objects from the mutable ordered set.","dec":"- (void)removeAllObjects"},"removeObject:":{"abs":"Removes a given object from the mutable ordered set.","dec":"- (void)removeObject:(id)object"},"removeObjectAtIndex:":{"abs":"Removes a the object at the specified index from the mutable ordered set.","dec":"- (void)removeObjectAtIndex:(NSUInteger)idx"},"removeObjectsAtIndexes:":{"abs":"Removes the objects at the specified indexes from the mutable ordered set.","dec":"- (void)removeObjectsAtIndexes:(NSIndexSet *)indexes"},"removeObjectsInArray:":{"abs":"Removes the objects in the array from the mutable ordered set.","dec":"- (void)removeObjectsInArray:(NSArray *)array"},"removeObjectsInRange:":{"abs":"Removes from the mutable ordered set each of the objects within a given range.","dec":"- (void)removeObjectsInRange:(NSRange)range"},"replaceObjectAtIndex:withObject:":{"abs":"Replaces the object at the specified index with the new object.","dec":"- (void)replaceObjectAtIndex:(NSUInteger)idx withObject:(id)object"},"replaceObjectsAtIndexes:withObjects:":{"abs":"Replaces the objects at the specified indexes with the new objects.","dec":"- (void)replaceObjectsAtIndexes:(NSIndexSet *)indexes withObjects:(NSArray *)objects"},"replaceObjectsInRange:withObjects:count:":{"abs":"Replaces the objects in the receiving mutable ordered set at the range with the specified number of objects from a given C array.","dec":"- (void)replaceObjectsInRange:(NSRange)range withObjects:(const id [])objects count:(NSUInteger)count"},"setObject:atIndex:":{"abs":"Appends or replaces the object at the specified index.","dec":"- (void)setObject:(id)obj atIndex:(NSUInteger)idx"},"setObject:atIndexedSubscript:":{"abs":"Inserts the given object at the specified index of the mutable ordered set.","dec":"- (void)setObject:(id)obj atIndexedSubscript:(NSUInteger)idx"},"sortRange:options:usingComparator:":{"abs":"Sorts the specified range of the mutable ordered set using the specified options and the comparison method specified by a given comparator block.","dec":"- (void)sortRange:(NSRange)range options:(NSSortOptions)opts usingComparator:(NSComparator)cmptr"},"sortUsingComparator:":{"abs":"Sorts the mutable ordered set using the comparison method specified by the comparator block.","dec":"- (void)sortUsingComparator:(NSComparator)cmptr"},"sortUsingDescriptors:":{"abs":"Sorts the receiving ordered set using a given array of sort descriptors.","dec":"- (void)sortUsingDescriptors:(NSArray *)sortDescriptors"},"sortWithOptions:usingComparator:":{"abs":"Sorts the mutable ordered set using the specified options and the comparison method specified by a given comparator block.","dec":"- (void)sortWithOptions:(NSSortOptions)opts usingComparator:(NSComparator)cmptr"},"unionOrderedSet:":{"abs":"Adds each object in another given ordered set to the receiving mutable ordered set, if not present.","dec":"- (void)unionOrderedSet:(NSOrderedSet *)other"},"unionSet:":{"abs":"Adds each object in another given set to the receiving mutable ordered set, if not present.","dec":"- (void)unionSet:(NSSet *)other"}}};